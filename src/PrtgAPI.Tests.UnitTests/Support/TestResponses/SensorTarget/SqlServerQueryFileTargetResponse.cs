using System.Text;

namespace PrtgAPI.Tests.UnitTests.Support.TestResponses
{
    public class SqlServerQueryFileTargetResponse : BaseTargetResponse
    {
        protected override string GetResponseText()
        {
            var builder = new StringBuilder();

            builder.Append("<!DOCTYPE html>\n");
            builder.Append("<html>\n");
            builder.Append("<head>\n");
            builder.Append("  <link rel=\"manifest\" href=\"/public/manifest.json.htm\">\n");
            builder.Append("  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
            builder.Append("  <meta charset=\"utf-8\">\n");
            builder.Append("  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n");
            builder.Append("  <link id=\"prtgfavicon\" rel=\"shortcut icon\" type=\"image/png\" href=\"/icons/favicon_red.png\" />\n");
            builder.Append("  <title>Add Sensor (Step 2 of 2) | PRTG Network Monitor (16-DPRTG-1)</title>\n");
            builder.Append("  <link rel=\"stylesheet\" href=\"/css/prtg.css?prtgversion=17.4.33.3283&language=en\">\n");
            builder.Append("  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css?version=17.4.33.3283\" media=\"print\"  />\n");
            builder.Append("  <style>.hideforreadonly {}\n");
            builder.Append(".actionbutton,.actionbutton:link {}\n");
            builder.Append("</style>\n");
            builder.Append("</head>\n");
            builder.Append("<body id=\"mainbody\" class=\"systemmenu  language_en\">\n");
            builder.Append("<header>\n");
            builder.Append("   <div id=\"crumblersensorstats\" class=\"prtg-plugin\" data-plugin=\"crumblerSensorStats\">\n");
            builder.Append("<div class=\"statusinfo undefinedsens display0\"\n");
            builder.Append("    title=\"x Unknown\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=0&filter_status=6&filter_status=1\">\n");
            builder.Append("        <span class=\"icon sensx\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo unusualsens display0\"\n");
            builder.Append("    title=\"x Unusual\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=10\">\n");
            builder.Append("        <span class=\"icon sensp\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo pausedsens display1450\"\n");
            builder.Append("    title=\"145x Paused\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=7&filter_status=8&filter_status=9&filter_status=11&filter_status=12\">\n");
            builder.Append("        <span class=\"icon sensb\"></span>\n");
            builder.Append("        <span class=\"counter\">145</span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo upsens display0\"\n");
            builder.Append("    title=\"x Up\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=2&filter_status=3\">\n");
            builder.Append("        <span class=\"icon sensg\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo warnsens display0\"\n");
            builder.Append("    title=\"x Warning\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=4\">\n");
            builder.Append("        <span class=\"icon sensy\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo downacksens display0\"\n");
            builder.Append("    title=\"x Down (Acknowledged)\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=13\">\n");
            builder.Append("        <span class=\"icon senso\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo partialdownsens display0\"\n");
            builder.Append("    title=\"x Down (Partial)\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=14\">\n");
            builder.Append("        <span class=\"icon sensq\"></span>\n");
            builder.Append("        <span class=\"counter\"></span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo downsens display70\"\n");
            builder.Append("    title=\"7x Down\">\n");
            builder.Append("    <a href=\"/sensors.htm?id=0&filter_status=5\">\n");
            builder.Append("        <span class=\"icon sensr\"></span>\n");
            builder.Append("        <span class=\"counter\">7</span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"spacing\"></div>\n");
            builder.Append("<div class=\"statusinfo newtickets display0\" title=\"Number of updated Tickets\">\n");
            builder.Append("    <a href=\"/tickets.htm?filter_user=100&filter_status=1\">\n");
            builder.Append("        <span class=\"text\">Updated Tickets</span>\n");
            builder.Append("        <span class=\"counter\">...</span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo message display0\" title='Number of new logfile entries since last login'>\n");
            builder.Append("    <a id=\"new_message\" href=\"/log.htm\">\n");
            builder.Append("        <span class=\"text\">New Log Entries</span>\n");
            builder.Append("        <span class=\"counter\">...</span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("<div class=\"statusinfo alert display0\" title=\"Current Alarm Count\">\n");
            builder.Append("    <a id=\"new_alarms\" href=\"/alarms.htm?filter_status=5&filter_status=4&filter_status=10&filter_status=13&filter_status=14\">\n");
            builder.Append("        <span class=\"text\">New Alarms</span>\n");
            builder.Append("        <span class=\"counter\">...</span>\n");
            builder.Append("    </a>\n");
            builder.Append("</div>\n");
            builder.Append("  </div>\n");
            builder.Append("  <nav id=\"header_menu\">\n");
            builder.Append("    <div>\n");
            builder.Append("<ul id=\"main_menu\">\n");
            builder.Append("  <li>\n");
            builder.Append("    <a class=\"homeicon\" href=\"/home\">Home</a>\n");
            builder.Append("    <ul>\n");
            builder.Append("      <li class=\"menudivider\"><a href=\"/mapdashboard.htm?id=2003\">Sample Dashboard</a></li>\n");
            builder.Append("      <li style=\"display:none;\">\n");
            builder.Append("        Switch Cluster Node<span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li>\n");
            builder.Append("        <a href=\"/sitemap.htm\">Sitemap</a>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li class=\"menudivider\">\n");
            builder.Append("        <a href=\"/welcome.htm\">Welcome to PRTG</a>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li onclick=\"_Prtg.Contextmenu.makeThisMyHomepage();return false;\" style=\"\">\n");
            builder.Append("        Make This My Homepage\n");
            builder.Append("      </li>\n");
            builder.Append("    </ul>\n");
            builder.Append("  </li>\n");
            builder.Append("  <li id=\"devicesmenuitem\"><a href=\"group.htm?id=0&tabid=1\">Devices</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"group.htm?id=0&tabid=1\" class=\"hideforreadonlyuser\" >All</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=0&tabid=1\">Group View <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"probenode.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"group.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"group.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"group.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"group.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"devices.htm\">Device List <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"devices.htm?filter_favorite=1\">Favorite Devices</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"devices.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"devices.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"devices.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"devices.htm?filter_favorite=1\">Favorite Devices</a></li>\n");
            builder.Append("<li class=\"menudivider\">Dependencies <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=0&filter_dependency=@above(2)\">Selected Dependencies <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=0&filter_dependency=2\">Master Dependencies <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies_simple.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"dependencies_simple.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=0\">Dependencies Graph <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"dependencies.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"dependencies.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"#\"  class=\"nohjax hideforreadonlyuser\"  onclick=\"_Prtg.objectTools.addObject0('group', {preselect:0});return false;\">Add Group</a></li>\n");
            builder.Append("<li><a href=\"#\"  class=\"nohjax hideforreadonlyuser\"  onclick=\"_Prtg.objectTools.addObject0('autodiscovery', {preselect:0});return false;\">Add Auto-Discovery Group</a></li>\n");
            builder.Append("<li><a href=\"#\"  class=\"nohjax hideforreadonlyuser\"  onclick=\"_Prtg.objectTools.addObject0('device', {preselect:0});return false;\">Add Device</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"libraries.htm\">Libraries</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"libraries.htm\">All</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"#\"  class=\"nohjax hideforreadonlyuser\"  onclick=\"_Prtg.objectTools.addObject.apply(this, ['new', 'library',{'target':'root','redirect':'/library.htm?tabid=2'}]);return false;\">Add Library</a></li>\n");
            builder.Append("<li>Select Library <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a id=\"715\" href=\"library.htm?id=715\">All bandwidth sensors</a></li>\n");
            builder.Append("<li><a id=\"718\" href=\"library.htm?id=718\">All CPU load sensors</a></li>\n");
            builder.Append("<li><a id=\"716\" href=\"library.htm?id=716\">All diskspace sensors</a></li>\n");
            builder.Append("<li><a id=\"717\" href=\"library.htm?id=717\">All memory sensors</a></li>\n");
            builder.Append("<li><a id=\"710\" href=\"library.htm?id=710\">All sensors grouped by state</a></li>\n");
            builder.Append("<li><a id=\"712\" href=\"library.htm?id=712\">All VMware sensors</a></li>\n");
            builder.Append("<li><a id=\"2155\" href=\"library.htm?id=2155\">Library</a></li>\n");
            builder.Append("<li><a id=\"719\" href=\"library.htm?id=719\">Sensors grouped by priority</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li id=\"sensorsmenuitem\"><a href=\"sensors.htm\">Sensors</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"sensors.htm\">All</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"addsensor0.htm\" class=\"hideforreadonlyuser\" >Add Sensor</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"sensors.htm?filter_favorite=1\">Favorite Sensors</a></li>\n");
            builder.Append("<li><a href=\"top10.htm\">Top 10 Lists  <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"top10.htm\">All Sensors</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"top10.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"top10.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"top10.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">By Current Value  <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href='#' onclick=\"false\">Fastest  <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?sortby=lastvalue&filter_type=ping&display=101&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Ping</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_type=port&display=102&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Port</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_tags=@tag(httpsensor)&display=103&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Webpages</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_type=pop3&filter_type=imap&filter_type=smtp&display=104&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">IMAP/POP3/SMTP</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_type=ftp&display=105&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">FTP</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">Slowest  <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?sortby=-lastvalue&filter_type=ping&display=201&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Ping</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_type=port&display=202&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Port</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_tags=@tag(httpsensor)&display=203&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Webpages</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_type=pop3&filter_type=imap&filter_type=smtp&display=204&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">IMAP/POP3/SMTP</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_type=ftp&display=205&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">FTP</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">Most Used  <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?sortby=-lastvalue&filter_tags=@tag(bandwidthsensor)&display=306&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Bandwidth Sensors</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_tags=@tag(cpuloadsensor)&display=307&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">CPUs</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_tags=@tag(diskspacesensor)&display=308&filter_lastvalue=@below(10100)&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Disks</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_tags=@tag(memorysensor)&display=309&filter_lastvalue=@below(10100)&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Memory</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">Least Used <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?sortby=lastvalue&filter_tags=@tag(bandwidthsensor)&display=406&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Bandwidth Sensors</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=lastvalue&filter_tags=@tag(cpuloadsensor)&display=407&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">CPUs</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_tags=@tag(diskspacesensor)&display=408&filter_lastvalue=@below(10100)&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Disks</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=-lastvalue&filter_tags=@tag(memorysensor)&display=409&filter_lastvalue=@below(10100)&filter_status=3&filter_status=13&filter_status=14&filter_status=4&filter_status=10\">Memory</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">By Current Status <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_status=3\">Up</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"sensors.htm?filter_status=4\">Warning</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_status=5\">Down</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"sensors.htm?filter_status=13\">Down (Acknowledged)</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_status=10\">Unusual</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_status=7&filter_status=9&filter_status=8&filter_status=12&filter_status=11\">Paused</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_status=1&filter_status=2&filter_status=0\">Unknown</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href='#' onclick=\"false\">By Uptime/Downtime <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?sortby=uptime&columns=group,device,sensor,status,message,lastvalue,uptime,uptimetime,downtime,downtimetime\">Best Uptime (%)</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=uptimetime&columns=group,device,sensor,status,message,lastvalue,uptime,uptimetime,downtime,downtimetime\">Highest Uptime (Time)</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=downtime&columns=group,device,sensor,status,message,lastvalue,uptime,uptimetime,downtime,downtimetime\">Worst Downtime (%)</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?sortby=downtimetime&columns=group,device,sensor,status,message,lastvalue,uptime,uptimetime,downtime,downtimetime\">Highest Downtime (Time)</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li>By Group <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">By Type <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href='#' onclick=\"false\">C&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=commonsaas\">Common SaaS</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=corestate\">Core Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">D&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=dns\">DNS</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">E&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=exe\">EXE/Script</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=exexml\">EXE/Script Advanced</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">G&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=green\">Green IT</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">H&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=http\">HTTP</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">M&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=mssqlv2\">Microsoft SQL v2</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">O&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=oraclev2\">Oracle SQL v2</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=oracletablespace\">Oracle Tablespace</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">P&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=ping\">Ping</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=probestate\">Probe Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">R&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=remotedesktop\">RDP (Remote Desktop)</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">S&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=snmpcustom\">SNMP Custom</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=snmpcustomadvanced\">SNMP Custom Advanced</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=sslcertificate\">SSL Certificate Sensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=ssl\">SSL Security Check</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=systemstate\">System Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">W&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=wmiprocessor\">Windows CPU Load</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wminetwork\">Windows Network Card</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmipagefile\">Windows Pagefile</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmiphysicaldiskv2\">Windows Physical Disk I/O BETA</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmiuptime\">Windows System Uptime</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmicustom\">WMI Custom</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmidiskspace\">WMI Free Disk Space (Multi Disk)</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmilogicaldiskv2\">WMI Logical Disk I/O BETA</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmimemory\">WMI Memory</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmiremoteping\">WMI Remote Ping</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_type=wmivolume\">WMI Volume</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">Z&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_type=zen\">ZEN</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href='#' onclick=\"false\">By Tag <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href='#' onclick=\"false\">B&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(bandwidthsensor)\">bandwidthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">C&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(C_OS_VMware)\">C_OS_VMware</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(certificate)\">certificate</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(commonsaas)\">commonsaas</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(corehealthsensor)\">corehealthsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(cpuloadsensor)\">cpuloadsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">D&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(devicetag)\">devicetag</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(diskspacesensor)\">diskspacesensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(dnssensor)\">dnssensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">E&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(exesensor)\">exesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">H&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(httpsensor)\">httpsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">M&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(memorysensor)\">memorysensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">P&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(pagefilesensor)\">pagefilesensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(parenttag)\">parenttag</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(pingsensor)\">pingsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(probehealthsensor)\">probehealthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">R&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(rdpsensor)\">rdpsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(remotepingsensor)\">remotepingsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">S&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(saas)\">saas</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(snmpcustomadvanced)\">snmpcustomadvanced</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(snmpcustomsensor)\">snmpcustomsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(sqlsensor)\">sqlsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(ssl)\">ssl</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(sslcertificate)\">sslcertificate</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(sslsensor)\">sslsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(systemhealthsensor)\">systemhealthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">W&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(wmibandwidthsensor)\">wmibandwidthsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmicpuloadsensor)\">wmicpuloadsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmicustomsensor)\">wmicustomsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmidiskspacesensor)\">wmidiskspacesensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmilogicalsensor)\">wmilogicalsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmimemorysensor)\">wmimemorysensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmipagefilesensor)\">wmipagefilesensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmiphysicaldisksensor)\">wmiphysicaldisksensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmipingsensor)\">wmipingsensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmisensor)\">wmisensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmiuptimesensor)\">wmiuptimesensor</a></li>\n");
            builder.Append("<li><a href=\"sensors.htm?filter_tags=@tag(wmivolumesensor)\">wmivolumesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">X&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensors.htm?filter_tags=@tag(xmlexesensor)\">xmlexesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"sensorxref.htm\">Cross Reference <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"sensorxref.htm\">All Sensors</a></li>\n");
            builder.Append("<li>By Group <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li>By Type <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href='#' onclick=\"false\">C&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=commonsaas\">Common SaaS</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=corestate\">Core Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">D&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=dns\">DNS</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">E&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=exe\">EXE/Script</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=exexml\">EXE/Script Advanced</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">G&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=green\">Green IT</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">H&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=http\">HTTP</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">M&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=mssqlv2\">Microsoft SQL v2</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">O&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=oraclev2\">Oracle SQL v2</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=oracletablespace\">Oracle Tablespace</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">P&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=ping\">Ping</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=probestate\">Probe Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">R&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=remotedesktop\">RDP (Remote Desktop)</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">S&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=snmpcustom\">SNMP Custom</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=snmpcustomadvanced\">SNMP Custom Advanced</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=sslcertificate\">SSL Certificate Sensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=ssl\">SSL Security Check</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=systemstate\">System Health</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">W&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=wmiprocessor\">Windows CPU Load</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wminetwork\">Windows Network Card</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmipagefile\">Windows Pagefile</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmiphysicaldiskv2\">Windows Physical Disk I/O BETA</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmiuptime\">Windows System Uptime</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmicustom\">WMI Custom</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmidiskspace\">WMI Free Disk Space (Multi Disk)</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmilogicaldiskv2\">WMI Logical Disk I/O BETA</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmimemory\">WMI Memory</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmiremoteping\">WMI Remote Ping</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_type=wmivolume\">WMI Volume</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">Z&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_type=zen\">ZEN</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li>By Tag <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href='#' onclick=\"false\">B&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(bandwidthsensor)\">bandwidthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">C&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(C_OS_VMware)\">C_OS_VMware</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(certificate)\">certificate</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(commonsaas)\">commonsaas</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(corehealthsensor)\">corehealthsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(cpuloadsensor)\">cpuloadsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">D&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(devicetag)\">devicetag</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(diskspacesensor)\">diskspacesensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(dnssensor)\">dnssensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">E&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(exesensor)\">exesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">H&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(httpsensor)\">httpsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">M&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(memorysensor)\">memorysensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">P&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(pagefilesensor)\">pagefilesensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(parenttag)\">parenttag</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(pingsensor)\">pingsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(probehealthsensor)\">probehealthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">R&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(rdpsensor)\">rdpsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(remotepingsensor)\">remotepingsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">S&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(saas)\">saas</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(snmpcustomadvanced)\">snmpcustomadvanced</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(snmpcustomsensor)\">snmpcustomsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(sqlsensor)\">sqlsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(ssl)\">ssl</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(sslcertificate)\">sslcertificate</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(sslsensor)\">sslsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(systemhealthsensor)\">systemhealthsensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">W&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(wmibandwidthsensor)\">wmibandwidthsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmicpuloadsensor)\">wmicpuloadsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmicustomsensor)\">wmicustomsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmidiskspacesensor)\">wmidiskspacesensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmilogicalsensor)\">wmilogicalsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmimemorysensor)\">wmimemorysensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmipagefilesensor)\">wmipagefilesensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmiphysicaldisksensor)\">wmiphysicaldisksensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmipingsensor)\">wmipingsensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmisensor)\">wmisensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmiuptimesensor)\">wmiuptimesensor</a></li>\n");
            builder.Append("<li><a href=\"sensorxref.htm?filter_tags=@tag(wmivolumesensor)\">wmivolumesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href='#' onclick=\"false\">X&hellip; <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"sensorxref.htm?filter_tags=@tag(xmlexesensor)\">xmlexesensor</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li>Compare Sensors <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href=\"compare.htm?count=2\">2 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=3\">3 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=4\">4 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=6\">6 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=8\">8 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=16\">16 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=24\">24 Sensors</a></li>\n");
            builder.Append("<li><a href=\"compare.htm?count=32\">32 Sensors</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"historicdata.htm\">View Historic Data</a></li>\n");
            builder.Append("<li><a href=\"similarsensors.htm\">Similar Sensors Overview</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li id=\"alarmsmenuitem\"><a href=\"alarms.htm?filter_status=5&filter_status=4&filter_status=10&filter_status=13&filter_status=14\">Alarms</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"alarms.htm?filter_status=5&filter_status=4&filter_status=10&filter_status=13&filter_status=14\">All</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"alarmsgauges.htm\">Show as Gauges</a></li>\n");
            builder.Append("<li><a href=\"alarms.htm?filter_status=5&filter_status=13&filter_status=14\">Errors Only</a></li>\n");
            builder.Append("<li><a href=\"alarms.htm?filter_status=4\">Warnings Only</a></li>\n");
            builder.Append("<li><a href=\"alarms.htm?filter_status=10\">Unusuals Only</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"maps.htm\">Maps</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"maps.htm\">All</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"addmap.htm\" class=\"hideforreadonlyuser\" >Add Map</a></li>\n");
            builder.Append("<li>Select Map <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a id=\"2001\" href=\"map.htm?id=2001\">Magic Map </a></li>\n");
            builder.Append("<li><a id=\"2154\" href=\"map.htm?id=2154\">Map </a></li>\n");
            builder.Append("<li><a id=\"2003\" href=\"map.htm?id=2003\">Sample Dashboard </a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"reports.htm\">Reports</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"reports.htm\">All</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"addreport.htm?id=new\" class=\"hideforreadonlyuser\" >Add Report</a></li>\n");
            builder.Append("<li class=\"menudivider\">Select Report <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a id=\"400\" href=\"report.htm?id=400\">Summary report for all sensors </a></li>\n");
            builder.Append("<li><a id=\"415\" href=\"report.htm?id=415\">Top 100 Busy/Idle Processor Sensors </a></li>\n");
            builder.Append("<li><a id=\"417\" href=\"report.htm?id=417\">Top 100 Fastest/Slowest HTTP Sensors </a></li>\n");
            builder.Append("<li><a id=\"413\" href=\"report.htm?id=413\">Top 100 Fastest/Slowest PING Sensors </a></li>\n");
            builder.Append("<li><a id=\"416\" href=\"report.htm?id=416\">Top 100 Free/Full Disk Space Sensors </a></li>\n");
            builder.Append("<li><a id=\"414\" href=\"report.htm?id=414\">Top 100 Most/Least Used Bandwidth Sensors </a></li>\n");
            builder.Append("<li><a id=\"418\" href=\"report.htm?id=418\">Top 100 Most/Least Used Memory Sensors </a></li>\n");
            builder.Append("<li><a id=\"412\" href=\"report.htm?id=412\">Top 100 Uptime/Downtime Report </a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\">Configuration Reports <span class=\"ui-icon ui-icon-carat-1-e\"></span>\n");
            builder.Append("<ul><li><a href=\"config_report_maps.htm\" class=\"nohjax\"  target=\"_blank\" >Maps</a></li>\n");
            builder.Append("<li><a href=\"config_report_reports.htm\" class=\"nohjax\"  target=\"_blank\" >Reports</a></li>\n");
            builder.Append("<li><a href=\"config_report_users.htm\" class=\"nohjax\"  target=\"_blank\" >Users & User Groups</a></li>\n");
            builder.Append("<li><a href=\"config_report_systemconfig.htm\" class=\"nohjax\"  target=\"_blank\" >System Configuration</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li id=\"logmenuitem\"><a href=\"log.htm\">Logs</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"log.htm\">All</a></li>\n");
            builder.Append("<li><a href='#' onclick=\"false\"  class=\"nohjax\"  onclick=\"return false;\">By Group <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"log.htm\">All</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=1\">blah2<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"log.htm?id=2177\">Group</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=4138\">Group<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"log.htm?id=4249\">Group1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"log.htm?id=4140\">test</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=4221\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=4222\">newGroup</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=4252\">testGroup1</a></li>\n");
            builder.Append("<li><a href=\"log.htm?id=4255\">testGroup1</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href='#' onclick=\"false\"  class=\"nohjax\"  onclick=\"return false;\">Status Changes <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"log.htm?filter_status=608&filter_status=607&filter_status=620\">Up &amp; Down</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=620&filter_status=608\">Down</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=609\">Warning</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=610\">Unusual</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"log.htm?filter_status=607\">Up</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=602&filter_status=603&filter_status=604&filter_status=605&filter_status=606\">Paused/Resumed</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=619\">Acknowledged Alarms</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href='#' onclick=\"false\"  class=\"nohjax\"  onclick=\"return false;\">System Events <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"log.htm?filter_status=14&filter_status=612&filter_status=613&filter_status=614&filter_status=4&filter_status=5&filter_status=12&filter_status=10&filter_status=701\">Probe Related</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=801&filter_status=802&filter_status=803&filter_status=804&filter_status=805\">Auto-Discovery</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=13\">Notifications</a></li>\n");
            builder.Append("<li><a href=\"log.htm?filter_status=1&filter_status=2&filter_status=3&filter_status=6&filter_status=7&filter_status=8&filter_status=9&filter_status=10&filter_status=11\">Status Messages</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"/objecthistory.htm\">Object History</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li id=\"todomenuitem\"><a href=\"tickets.htm?filter_user=100&filter_status=1\">Tickets</a>\n");
            builder.Append("<ul><li class=\"menudivider\"><a href=\"tickets.htm?filter_user=100&filter_status=1.htm\">All</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_user=100&filter_status=1\">My Tickets <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"tickets.htm?filter_user=100&filter_status=1\">Open</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_user=100&filter_status=2\">Resolved</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_user=100&filter_status=3\">Closed</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_user=100\">All</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_status=1\">All Tickets <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"tickets.htm?filter_status=1\">Open</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_status=2\">Resolved</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_status=3\">Closed</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm\">All</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"tickets.htm?filter_type=1&filter_status=1\">ToDo Tickets <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"tickets.htm?filter_type=1&filter_status=1\">Open <span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("<ul><li><a href=\"tickets.htm?filter_type=1&filter_status=1\">All</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_code=708&filter_status=1&filter_type=1\">Report Related</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_code=805&filter_status=1&filter_type=1\">Auto-Discovery Related</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_code=701&filter_code=710&filter_status=1&filter_type=1\">Probe Related</a></li>\n");
            builder.Append("<li class=\"menudivider\"><a href=\"tickets.htm?filter_code=704&filter_code=705&filter_code=707&filter_code=709&filter_code=711&filter_status=1&filter_type=1\">System Errors</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_code=706&filter_status=1&filter_type=1\">New Software Version</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_type=1&filter_status=2\">Resolved</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_type=1&filter_status=3\">Closed</a></li>\n");
            builder.Append("<li><a href=\"tickets.htm?filter_type=1\">All</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("<li><a href=\"#\"  class=\"nohjax hideforreadonlyuser\"  onclick=\"_Prtg.objectTools.ticketAdd0({preselect:0});return false;\">Open Ticket</a></li>\n");
            builder.Append("</ul>\n");
            builder.Append("</li>\n");
            builder.Append("  <li style=''>\n");
            builder.Append("    <a href=\"/setup.htm\">Setup</a>\n");
            builder.Append("    <ul>\n");
            builder.Append("      <li class='menudivider'>\n");
            builder.Append("        <a href='/setup.htm'>Overview</a>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li style=''>\n");
            builder.Append("        <a href=\"/myaccount.htm\">Account Settings<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("        <ul>\n");
            builder.Append("          <li class='menudivider'>\n");
            builder.Append("            <a href=\"/myaccount.htm\">My Account</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li style=''>\n");
            builder.Append("            <a href='/myaccount.htm?tabid=2'>Notifications</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li style=''>\n");
            builder.Append("            <a href='/myaccount.htm?tabid=4'>Notification Contacts</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li style=''>\n");
            builder.Append("            <a href='/myaccount.htm?tabid=3'>Schedules</a>\n");
            builder.Append("          </li>\n");
            builder.Append("        </ul>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li style=''>\n");
            builder.Append("        <a href='/systemsetup.htm'>System Administration<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("        <ul>\n");
            builder.Append("          <li class='menudivider' style=\"display:none;\"\">\n");
            builder.Append("            <a href='https://www.my-prtg.com' target=\"=_blank\">Manage Subscription</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li class='menudivider'>\n");
            builder.Append("            <a href='/systemsetup.htm'>User Interface</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=2'>Monitoring</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li style=''>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=3'>Notification Delivery</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=4'>Core & Probes</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=5'>User Accounts</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=6' class='menudivider'>User Groups</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=7'>Administrative Tools</a>\n");
            builder.Append("          </li>\n");
            builder.Append("          <li style='display:none;'>\n");
            builder.Append("            <a href='/systemsetup.htm?tabid=8'>Cluster</a>\n");
            builder.Append("          </li>\n");
            builder.Append("        </ul>\n");
            builder.Append("      </li>\n");
            builder.Append("      <li style=' '>\n");
            builder.Append("        <a href='/status.htm'>PRTG Status</a>\n");
            builder.Append("        <li style=' display:none;'>\n");
            builder.Append("          <a href='/status.htm'>PRTG Status<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("          <ul>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a href='/status.htm'>System Status</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li style='display:none;'>\n");
            builder.Append("              <a href='/status.htm?tabid=2'>Cluster Status</a>\n");
            builder.Append("            </li>\n");
            builder.Append("          </ul>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style=' '>\n");
            builder.Append("          <a class=\"nohjax\" href='/licensing.htm?tabid=1'>License</span></a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style=' '>\n");
            builder.Append("          <a href='/autoupdate.htm'>Auto-Update<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("          <ul>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a class=\"nohjax\" href='/autoupdate.htm?tabid=1'>Status</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a class=\"nohjax\" href='/autoupdate.htm?tabid=3'>Settings</a>\n");
            builder.Append("            </li>\n");
            builder.Append("          </ul>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style='' class='menudivider'>\n");
            builder.Append("          <a href='/downloads.htm'>Downloads<span class=\"ui-icon ui-icon-carat-1-e\"></span></a>\n");
            builder.Append("          <ul>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a href='/downloads.htm?tabid=1'>Client Apps for Mobile Devices</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li  class=\"\">\n");
            builder.Append("              <a href='/downloads.htm?tabid=2'>Client App for Windows (Enterprise Console)</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a href='/downloads.htm?tabid=3'>Remote Probe Installer</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li>\n");
            builder.Append("              <a href='/downloads.htm?tabid=4'>PRTG Tools</a>\n");
            builder.Append("            </li>\n");
            builder.Append("            <li class=\"onlynotificationbrowser\">\n");
            builder.Append("              <a href='/downloads.htm?tabid=5'>Desktop Notifications</a>\n");
            builder.Append("            </li>\n");
            builder.Append("          </ul>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style=''>\n");
            builder.Append("          <a href='/api.htm'>PRTG API</a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style=' display:none;'>\n");
            builder.Append("          <a class=\"nohjax\" href='/licensing.htm?tabid=3'>Enter License Key</a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li style=' '>\n");
            builder.Append("          <a onclick=\"_Prtg.objectTools.sendFeedback('/sendfeedback.htm?errorurl='+window.location.pathname,'');return false;\">Contact Support</a>\n");
            builder.Append("        </li>\n");
            builder.Append("      </li>\n");
            builder.Append("    </ul>\n");
            builder.Append("  </li>\n");
            builder.Append("</ul>\n");
            builder.Append("    </div>\n");
            builder.Append("  </nav>\n");
            builder.Append("    <div id=\"quickbar\">\n");
            builder.Append("      <ul>\n");
            builder.Append("        <li>\n");
            builder.Append("          <a class=\"icon-refresh icon-white\" onclick=\"_Prtg.Events.stop('refresh');return false;\" title=\"Refresh\"></a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li>\n");
            builder.Append("          <a class=\"icon-help icon-white\" href=\"/help.htm\" title=\"Help Center\"></a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li>\n");
            builder.Append("          <a class=\"icon-power icon-white logout\" href=\"/index.htm?logout=1\" title=\"Logout\"></a>\n");
            builder.Append("        </li>\n");
            builder.Append("        <li class=\" inactivitylogout hide\" data-plugin=\"activity\" data-loggedout-text=\"You were automatically logged out after a certain time of inactivity.\" title=\"After a certain time of inactivity, you will be automatically logged out.\"></li>\n");
            builder.Append("      </ul>\n");
            builder.Append("      <form onsubmit=\"_Prtg.Hjax.loadLink('/search.htm?searchtext='+encodeURIComponent($(this).find('#searchtext').val())); return false;\" method=\"get\" id=\"searchform\">\n");
            builder.Append("        <label class=\"ui-icon icon-blue ui-icon-search\" id=\"searchicon\" for=\"searchtext\"></label>\n");
            builder.Append("        <input id=\"searchtext\" placeholder=\"Search...\" name=\"searchtext\" type=\"text\" >\n");
            builder.Append("      </form>\n");
            builder.Append("    </div>\n");
            builder.Append("  <div id=\"header_breadcrumbs\"><div class=\"breadcrumbs prtg-plugin\" data-plugin=\"prtg-breadcrumbs\" data-parent=\"true\"><ul class=\"crumbler\"><li><a href =\"/home\"><img class=\"breadcrumbshome\" src=\"/images/transparent.gif\" title=\"Home\"></a></li><li class=\"\" data-breadid=\"0\"><span class=\"breadcrumbdivider\"></span><a href=\"/group.htm?id=0\">Devices</a></li><li><span class=\"breadcrumbdivider\"></span><span>Add Sensor (Step 2 of 2)</span></li></ul></div><span class=\"breadcrumbdivider\"></span></div>\n");
            builder.Append("</header>\n");
            builder.Append("<div id=\"container\">\n");
            builder.Append("<div class=\"breadcrumbs prtg-plugin hide\" data-plugin=\"prtg-breadcrumbs\" data-child=\"true\"><ul class=\"crumbler\"><li><a href =\"/home\"><img class=\"breadcrumbshome\" src=\"/images/transparent.gif\" title=\"Home\"></a></li><li class=\"\" data-breadid=\"0\"><span class=\"breadcrumbdivider\"></span><a href=\"/group.htm?id=0\">Devices</a></li><li class=\"breadcrumbmenu\" data-breadid=\"1\"><span class=\"breadcrumbdivider\"></span><a class=\"probenodemenu nopopup\" data-id=\"1\" href=\"/probenode.htm?id=1\">blah2</a><li class=\"breadcrumbmenu\" data-breadid=\"2177\"><span class=\"breadcrumbdivider\"></span><a class=\"groupmenu nopopup\" data-id=\"2177\" href=\"/group.htm?id=2177\">Group</a></li></li><li><span class=\"breadcrumbdivider\"></span><a href=\"/device.htm?id=2113\" class=\"devicemenu nopopup breadcrumbmenu \" data-id=\"2113\">sql-1</a></li><li><span class=\"breadcrumbdivider\"></span><span>Add Sensor (Step 2 of 2)</span></li></ul></div>\n");
            builder.Append("<div id=\"main\" data-title=\"Add Sensor (Step 2 of 2)\" data-contexthelpshow=\"true\">\n");
            builder.Append("  <h1>\n");
            builder.Append("    <b>Add Sensor</b> to Device <span data-id=\"2113\" class=\"devicemenu localprobe hasnored hasnopartialred hasnoack hasnoyellow hasnoorange hasnoblack hasblue hasnogreen  isnotpaused  isfavorite\">sql-1 [16-sql-1]</span>\n");
            builder.Append("    (Step 2 of 2)\n");
            builder.Append("  </h1>\n");
            builder.Append("  <div id=\"content\">\n");
            builder.Append("    <form id=\"addobjectdialogform\" action=\"addsensor5.htm\" method=\"POST\" enctype=\"multipart/form-data\" class=\"prtg-form prtg-plugin\" data-plugin=\"prtg-form\" data-ajaxsubmit=\"true\">\n");
            builder.Append("      <fieldset>\n");
            builder.Append("<legend class=\"prtg-header\">Basic Sensor Settings</legend><div class=\"control-group\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"name_\">Sensor Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a meaningful name to identify the sensor. By default, PRTG shows this name in the device tree, in alarms, logs, notifications, reports, maps, libraries, and tickets.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#basic'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"name_\" id=\"name_\" autocomplete=\"off\" value=\"Microsoft SQL\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"parenttags_\">Parent Tags</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"This field shows all tags that this object inherits from objects that are at a higher level in the hierarchy, like its parent device, its group and probe.<br/><br/> <b>Note:</b> The inheritance of tags cannot be disabled.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#basic'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"parenttags_\" id=\"parenttags_\" autocomplete=\"off\" value=\"C_OS_VMware C_OS_VMware parenttag\" data-readonly=\"true\"></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"tags_\">Tags</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a list of tags (not case sensitive) for filtering purposes (for example, the top 10 lists use these tags). Use spaces or commas as separators.<br/><br/> <b>Note:</b> Plus (+) or minus (-) are not allowed as first characters.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#basic'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"tags_\" id=\"tags_\" autocomplete=\"off\" value=\"sqlsensor\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"priority_\">Priority</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define the priority status of this object. PRTG can sort this object in lists according to its priority, for example.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#basic'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"priority_\" class=\"combo\" id=\"priority_\" >\n");
            builder.Append("<option  value=\"5\" id=\"priority5\">***** (highest)</option>\n");
            builder.Append("<option  value=\"4\" id=\"priority4\">****</option>\n");
            builder.Append("<option  value=\"3\" selected=\"selected\"  id=\"priority3\">***</option>\n");
            builder.Append("<option  value=\"2\" id=\"priority2\">**</option>\n");
            builder.Append("<option  value=\"1\" id=\"priority1\">* (lowest)</option></select></div>\n");
            builder.Append("</div></fieldset><fieldset>\n");
            builder.Append("<legend class=\"prtg-header\">Database Specific</legend><div class=\"control-group\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"database_\">Database</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a database name.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#dbcredentials'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"database_\" id=\"database_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"useinstancename_\">SQL Server Instance</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Specify if you want to use a named instance.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#dbcredentials'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"useinstancename_\" value=\"0\" checked  id=\"useinstancename0\" >\n");
            builder.Append("<label for=\"useinstancename0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("No instance name required (default)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"useinstancename_\" value=\"1\" id=\"useinstancename1\" >\n");
            builder.Append("<label for=\"useinstancename1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Use instance name\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help  Showuseinstancename1  Hideuseinstancename0  InitialDisplayNone  groupshowhideelement\" for=\"instancename_\">Instance Name</label>\n");
            builder.Append("<div class=\"controls  Showuseinstancename1  Hideuseinstancename0  InitialDisplayNone  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the database server instance that you want to monitor.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#dbcredentials'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"instancename_\" id=\"instancename_\" autocomplete=\"off\" value=\"SQLEXPRESS\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"enforceencryption_\">Encryption</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define how to apply encryption for the database connection. If you use server defaults, the database connection will only be encrypted if the server enforces the encryption.<br/> To make sure the connection is encrypted, use 'enforce encryption'.<br/> Validating the server certificate can help to detect man in the middle attacks on the server or help make sure the used certificate is valid.<br/> <br/><br/><b>Note:</b> Validation is only done if the database server enforces encryption.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#dbcredentials'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"enforceencryption_\" value=\"0\" checked  id=\"enforceencryption0\" >\n");
            builder.Append("<label for=\"enforceencryption0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Use server defaults (default)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"enforceencryption_\" value=\"2\" id=\"enforceencryption2\" >\n");
            builder.Append("<label for=\"enforceencryption2\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enforce encryption but do not validate server certificate\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"enforceencryption_\" value=\"1\" id=\"enforceencryption1\" >\n");
            builder.Append("<label for=\"enforceencryption1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enforce encryption and validate server certificate\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("</div></fieldset><fieldset>\n");
            builder.Append("<legend class=\"prtg-header\">Data</legend><div class=\"control-group\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"sqlquery_\">SQL Query File</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Select the SQL script file from the dropdown menu. Only files located in the <b>Custom Sensors\\sql\\<database type></b> subdirectory of the probe machine are listed. <br/><br/><b>Note</b>: Please note that the full result set is always transferred so make sure to use filters and limits in your query.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"sqlquery_\" id=\"sqlquery_\" >\n");
            builder.Append("<option value=\"Demo Serveruptime.sql|Demo Serveruptime.sql||\" selected=\"selected\" >Demo Serveruptime.sql</option>\n");
            builder.Append("<option value=\"test.sql|test.sql||\">test.sql</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"useparam_\">Use Input Parameter</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Optionally pass a parameter to the SQL query file that replaces a placeholder in the SQL query. Using a placeholder is useful if you have various SQL sensors where the queries differ in only one parameter.            You can use the placeholder <i>@prtg</i> in SQL queries for Microsoft SQL, MySQL, and PostgreSQL, the placeholder <i>:prtg</i> for Oracle SQL, and the placeholder <i>?</i> (question mark) for ADO SQL.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"useparam_\" value=\"0\" checked  id=\"useparam0\" >\n");
            builder.Append("<label for=\"useparam0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Don&#39;t use input parameter (default)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"useparam_\" value=\"1\" id=\"useparam1\" >\n");
            builder.Append("<label for=\"useparam1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Use input parameter\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help  Showuseparam1  Hideuseparam0  InitialDisplayNone  groupshowhideelement\" for=\"param_\">Input Parameter</label>\n");
            builder.Append("<div class=\"controls  Showuseparam1  Hideuseparam0  InitialDisplayNone  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter a parameter that replaces the <i>@prtg</i> or <i>:prtg</i> or <i>?</i> (question mark) placeholder in the SQL query file. You can also use PRTG placeholders for custom sensors as input parameter, for example, <i>%sensorid</i>           <br/><br/><b>Note:</b> Strings do not need to be surrounded by quotation marks.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"param_\" id=\"param_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"transaction_\">Use Transaction</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"<b>Use transaction and always rollback</b> if you want to make sure that the query will never actually change any data in the database. <b>Use transaction and commit on success</b> if you want to make sure that the query will only affect the database if all steps can be executed without errors. Use semicolons ';' as delimiters between all steps.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"transaction_\" value=\"noTransaction\" checked  id=\"transactionnoTransaction\" >\n");
            builder.Append("<label for=\"transactionnoTransaction\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Don&#39;t use transaction (default)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"transaction_\" value=\"Rollback\" id=\"transactionRollback\" >\n");
            builder.Append("<label for=\"transactionRollback\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Use transaction and always rollback\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"transaction_\" value=\"Commit\" id=\"transactionCommit\" >\n");
            builder.Append("<label for=\"transactionCommit\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Use transaction and commit on success\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"executionmode_\">Data Processing</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"If you want to read data from the database, you need to select <b>Process data table</b>. If you select <b>Just execute the query</b>, you will receive only information about how many rows were affected and how long the execution took. If you perform a select statement and want to know how many rows were returned, use <b>Count table rows</b>.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"executionmode_\" value=\"ChangeDB\" checked  id=\"executionmodeChangeDB\" >\n");
            builder.Append("<label for=\"executionmodeChangeDB\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Just execute the query\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"executionmode_\" value=\"CountRows\" id=\"executionmodeCountRows\" >\n");
            builder.Append("<label for=\"executionmodeCountRows\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Count table rows\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"executionmode_\" value=\"ReadData\" id=\"executionmodeReadData\" >\n");
            builder.Append("<label for=\"executionmodeReadData\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Process data table\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"readtableon\" class=\" ShowexecutionmodeReadData  HideexecutionmodeChangeDB  InitialDisplayNone  HideexecutionmodeCountRows  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"handledbnull_\">Handle DBNull in Channel Values as</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose whether 'DBNull' is a valid result and treated like the number 0 or triggers an error.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"handledbnull_\" value=\"1\" checked  id=\"handledbnull1\" >\n");
            builder.Append("<label for=\"handledbnull1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Error\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"handledbnull_\" value=\"0\" id=\"handledbnull0\" >\n");
            builder.Append("<label for=\"handledbnull0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Number 0\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"selectby_\">Select Channel Value by</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define what cell of the data table you want to use to determine the value for every channel. This setting describes how to select the desired cell. For every channel you enable, you will find a setting allowing you to specify where to search for the respective value. <ul>   <li>'Column Number' means to use the value in row 0 of column [Column Number].</li> <li>'Column Name' means to use the value in row 0 of the column with the name [Column Name].</li> <li>'Row Number' means to use the value in column 0 of row [Row Number].</li> <li>'Key Value' means to search for the value [Key] in column 0 of the dataset. The value in column 1 of the same row of the found key will be returned.</li> </ul> <b>Note:</b> All column and row indexes start counting with 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"selectby_\" value=\"ColumnID\" checked  id=\"selectbyColumnID\" >\n");
            builder.Append("<label for=\"selectbyColumnID\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Column number\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"selectby_\" value=\"ColumnName\" id=\"selectbyColumnName\" >\n");
            builder.Append("<label for=\"selectbyColumnName\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Column name\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"selectby_\" value=\"RowNumber\" id=\"selectbyRowNumber\" >\n");
            builder.Append("<label for=\"selectbyRowNumber\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Row number\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"selectby_\" value=\"KeyValue\" id=\"selectbyKeyValue\" >\n");
            builder.Append("<label for=\"selectbyKeyValue\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Key value pair\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel1name_\">Sensor Channel #1 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel1name_\" id=\"channel1name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel1columnnumber_\">Sensor Channel #1 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel1columnnumber_\" id=\"channel1columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel1columnname_\">Sensor Channel #1 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel1columnname_\" id=\"channel1columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel1rownumber_\">Sensor Channel #1 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel1rownumber_\" id=\"channel1rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel1key_\">Sensor Channel #1 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel1key_\" id=\"channel1key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel1isdifferential_\">Sensor Channel #1 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel1isdifferential_\" value=\"0\" checked  id=\"channel1isdifferential0\" >\n");
            builder.Append("<label for=\"channel1isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel1isdifferential_\" value=\"1\" id=\"channel1isdifferential1\" >\n");
            builder.Append("<label for=\"channel1isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel1unit_\">Sensor Channel #1 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel1unit_\" class=\"combo GroupShowHide\" id=\"channel1unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel1unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel1unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel1unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel1unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel1unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel1unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel1unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel1unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel1unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel1unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel1unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel1unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel1unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel1unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel1unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel1unitCustom  Hidechannel1unitBytesBandwidth  Hidechannel1unitBytesMemory  Hidechannel1unitBytesDisk  Hidechannel1unitTemperature  Hidechannel1unitPercent  Hidechannel1unitTimeResponse  Hidechannel1unitTimeSeconds  Hidechannel1unitTimeHours  Hidechannel1unitCount  InitialDisplayNone  Hidechannel1unitCPU  Hidechannel1unitBytesFile  Hidechannel1unitSpeedDisk  Hidechannel1unitSpeedNet  Hidechannel1unitValueLookup  groupshowhideelement\" for=\"channel1customunit_\">Sensor Channel #1 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel1unitCustom  Hidechannel1unitBytesBandwidth  Hidechannel1unitBytesMemory  Hidechannel1unitBytesDisk  Hidechannel1unitTemperature  Hidechannel1unitPercent  Hidechannel1unitTimeResponse  Hidechannel1unitTimeSeconds  Hidechannel1unitTimeHours  Hidechannel1unitCount  InitialDisplayNone  Hidechannel1unitCPU  Hidechannel1unitBytesFile  Hidechannel1unitSpeedDisk  Hidechannel1unitSpeedNet  Hidechannel1unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel1customunit_\" id=\"channel1customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel1unitValueLookup  Hidechannel1unitBytesBandwidth  Hidechannel1unitBytesMemory  Hidechannel1unitBytesDisk  Hidechannel1unitTemperature  Hidechannel1unitPercent  Hidechannel1unitTimeResponse  Hidechannel1unitTimeSeconds  Hidechannel1unitTimeHours  Hidechannel1unitCount  InitialDisplayNone  Hidechannel1unitCPU  Hidechannel1unitBytesFile  Hidechannel1unitSpeedDisk  Hidechannel1unitSpeedNet  Hidechannel1unitCustom  groupshowhideelement\" for=\"channel1valuelookup_\">Sensor Channel #1 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel1unitValueLookup  Hidechannel1unitBytesBandwidth  Hidechannel1unitBytesMemory  Hidechannel1unitBytesDisk  Hidechannel1unitTemperature  Hidechannel1unitPercent  Hidechannel1unitTimeResponse  Hidechannel1unitTimeSeconds  Hidechannel1unitTimeHours  Hidechannel1unitCount  InitialDisplayNone  Hidechannel1unitCPU  Hidechannel1unitBytesFile  Hidechannel1unitSpeedDisk  Hidechannel1unitSpeedNet  Hidechannel1unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel1valuelookup_\" id=\"channel1valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel2_\">Sensor Channel #2</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel2_\" value=\"0\" checked  id=\"usechannel20\" >\n");
            builder.Append("<label for=\"usechannel20\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel2_\" value=\"1\" id=\"usechannel21\" >\n");
            builder.Append("<label for=\"usechannel21\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel2on\" class=\" Showusechannel21  Hideusechannel20  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel2name_\">Sensor Channel #2 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel2name_\" id=\"channel2name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel2columnnumber_\">Sensor Channel #2 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel2columnnumber_\" id=\"channel2columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel2columnname_\">Sensor Channel #2 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel2columnname_\" id=\"channel2columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel2rownumber_\">Sensor Channel #2 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel2rownumber_\" id=\"channel2rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel2key_\">Sensor Channel #2 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel2key_\" id=\"channel2key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel2isdifferential_\">Sensor Channel #2 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel2isdifferential_\" value=\"0\" checked  id=\"channel2isdifferential0\" >\n");
            builder.Append("<label for=\"channel2isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel2isdifferential_\" value=\"1\" id=\"channel2isdifferential1\" >\n");
            builder.Append("<label for=\"channel2isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel2unit_\">Sensor Channel #2 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel2unit_\" class=\"combo GroupShowHide\" id=\"channel2unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel2unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel2unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel2unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel2unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel2unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel2unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel2unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel2unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel2unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel2unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel2unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel2unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel2unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel2unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel2unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel2unitCustom  Hidechannel2unitBytesBandwidth  Hidechannel2unitBytesMemory  Hidechannel2unitBytesDisk  Hidechannel2unitTemperature  Hidechannel2unitPercent  Hidechannel2unitTimeResponse  Hidechannel2unitTimeSeconds  Hidechannel2unitTimeHours  Hidechannel2unitCount  InitialDisplayNone  Hidechannel2unitCPU  Hidechannel2unitBytesFile  Hidechannel2unitSpeedDisk  Hidechannel2unitSpeedNet  Hidechannel2unitValueLookup  groupshowhideelement\" for=\"channel2customunit_\">Sensor Channel #2 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel2unitCustom  Hidechannel2unitBytesBandwidth  Hidechannel2unitBytesMemory  Hidechannel2unitBytesDisk  Hidechannel2unitTemperature  Hidechannel2unitPercent  Hidechannel2unitTimeResponse  Hidechannel2unitTimeSeconds  Hidechannel2unitTimeHours  Hidechannel2unitCount  InitialDisplayNone  Hidechannel2unitCPU  Hidechannel2unitBytesFile  Hidechannel2unitSpeedDisk  Hidechannel2unitSpeedNet  Hidechannel2unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel2customunit_\" id=\"channel2customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel2unitValueLookup  Hidechannel2unitBytesBandwidth  Hidechannel2unitBytesMemory  Hidechannel2unitBytesDisk  Hidechannel2unitTemperature  Hidechannel2unitPercent  Hidechannel2unitTimeResponse  Hidechannel2unitTimeSeconds  Hidechannel2unitTimeHours  Hidechannel2unitCount  InitialDisplayNone  Hidechannel2unitCPU  Hidechannel2unitBytesFile  Hidechannel2unitSpeedDisk  Hidechannel2unitSpeedNet  Hidechannel2unitCustom  groupshowhideelement\" for=\"channel2valuelookup_\">Sensor Channel #2 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel2unitValueLookup  Hidechannel2unitBytesBandwidth  Hidechannel2unitBytesMemory  Hidechannel2unitBytesDisk  Hidechannel2unitTemperature  Hidechannel2unitPercent  Hidechannel2unitTimeResponse  Hidechannel2unitTimeSeconds  Hidechannel2unitTimeHours  Hidechannel2unitCount  InitialDisplayNone  Hidechannel2unitCPU  Hidechannel2unitBytesFile  Hidechannel2unitSpeedDisk  Hidechannel2unitSpeedNet  Hidechannel2unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel2valuelookup_\" id=\"channel2valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel3_\">Sensor Channel #3</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel3_\" value=\"0\" checked  id=\"usechannel30\" >\n");
            builder.Append("<label for=\"usechannel30\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel3_\" value=\"1\" id=\"usechannel31\" >\n");
            builder.Append("<label for=\"usechannel31\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel3on\" class=\" Showusechannel31  Hideusechannel30  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel3name_\">Sensor Channel #3 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel3name_\" id=\"channel3name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel3columnnumber_\">Sensor Channel #3 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel3columnnumber_\" id=\"channel3columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel3columnname_\">Sensor Channel #3 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel3columnname_\" id=\"channel3columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel3rownumber_\">Sensor Channel #3 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel3rownumber_\" id=\"channel3rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel3key_\">Sensor Channel #3 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel3key_\" id=\"channel3key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel3isdifferential_\">Sensor Channel #3 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel3isdifferential_\" value=\"0\" checked  id=\"channel3isdifferential0\" >\n");
            builder.Append("<label for=\"channel3isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel3isdifferential_\" value=\"1\" id=\"channel3isdifferential1\" >\n");
            builder.Append("<label for=\"channel3isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel3unit_\">Sensor Channel #3 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel3unit_\" class=\"combo GroupShowHide\" id=\"channel3unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel3unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel3unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel3unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel3unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel3unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel3unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel3unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel3unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel3unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel3unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel3unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel3unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel3unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel3unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel3unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel3unitCustom  Hidechannel3unitBytesBandwidth  Hidechannel3unitBytesMemory  Hidechannel3unitBytesDisk  Hidechannel3unitTemperature  Hidechannel3unitPercent  Hidechannel3unitTimeResponse  Hidechannel3unitTimeSeconds  Hidechannel3unitTimeHours  Hidechannel3unitCount  InitialDisplayNone  Hidechannel3unitCPU  Hidechannel3unitBytesFile  Hidechannel3unitSpeedDisk  Hidechannel3unitSpeedNet  Hidechannel3unitValueLookup  groupshowhideelement\" for=\"channel3customunit_\">Sensor Channel #3 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel3unitCustom  Hidechannel3unitBytesBandwidth  Hidechannel3unitBytesMemory  Hidechannel3unitBytesDisk  Hidechannel3unitTemperature  Hidechannel3unitPercent  Hidechannel3unitTimeResponse  Hidechannel3unitTimeSeconds  Hidechannel3unitTimeHours  Hidechannel3unitCount  InitialDisplayNone  Hidechannel3unitCPU  Hidechannel3unitBytesFile  Hidechannel3unitSpeedDisk  Hidechannel3unitSpeedNet  Hidechannel3unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel3customunit_\" id=\"channel3customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel3unitValueLookup  Hidechannel3unitBytesBandwidth  Hidechannel3unitBytesMemory  Hidechannel3unitBytesDisk  Hidechannel3unitTemperature  Hidechannel3unitPercent  Hidechannel3unitTimeResponse  Hidechannel3unitTimeSeconds  Hidechannel3unitTimeHours  Hidechannel3unitCount  InitialDisplayNone  Hidechannel3unitCPU  Hidechannel3unitBytesFile  Hidechannel3unitSpeedDisk  Hidechannel3unitSpeedNet  Hidechannel3unitCustom  groupshowhideelement\" for=\"channel3valuelookup_\">Sensor Channel #3 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel3unitValueLookup  Hidechannel3unitBytesBandwidth  Hidechannel3unitBytesMemory  Hidechannel3unitBytesDisk  Hidechannel3unitTemperature  Hidechannel3unitPercent  Hidechannel3unitTimeResponse  Hidechannel3unitTimeSeconds  Hidechannel3unitTimeHours  Hidechannel3unitCount  InitialDisplayNone  Hidechannel3unitCPU  Hidechannel3unitBytesFile  Hidechannel3unitSpeedDisk  Hidechannel3unitSpeedNet  Hidechannel3unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel3valuelookup_\" id=\"channel3valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel4_\">Sensor Channel #4</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel4_\" value=\"0\" checked  id=\"usechannel40\" >\n");
            builder.Append("<label for=\"usechannel40\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel4_\" value=\"1\" id=\"usechannel41\" >\n");
            builder.Append("<label for=\"usechannel41\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel4on\" class=\" Showusechannel41  Hideusechannel40  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel4name_\">Sensor Channel #4 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel4name_\" id=\"channel4name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel4columnnumber_\">Sensor Channel #4 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel4columnnumber_\" id=\"channel4columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel4columnname_\">Sensor Channel #4 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel4columnname_\" id=\"channel4columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel4rownumber_\">Sensor Channel #4 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel4rownumber_\" id=\"channel4rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel4key_\">Sensor Channel #4 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel4key_\" id=\"channel4key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel4isdifferential_\">Sensor Channel #4 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel4isdifferential_\" value=\"0\" checked  id=\"channel4isdifferential0\" >\n");
            builder.Append("<label for=\"channel4isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel4isdifferential_\" value=\"1\" id=\"channel4isdifferential1\" >\n");
            builder.Append("<label for=\"channel4isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel4unit_\">Sensor Channel #4 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel4unit_\" class=\"combo GroupShowHide\" id=\"channel4unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel4unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel4unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel4unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel4unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel4unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel4unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel4unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel4unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel4unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel4unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel4unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel4unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel4unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel4unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel4unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel4unitCustom  Hidechannel4unitBytesBandwidth  Hidechannel4unitBytesMemory  Hidechannel4unitBytesDisk  Hidechannel4unitTemperature  Hidechannel4unitPercent  Hidechannel4unitTimeResponse  Hidechannel4unitTimeSeconds  Hidechannel4unitTimeHours  Hidechannel4unitCount  InitialDisplayNone  Hidechannel4unitCPU  Hidechannel4unitBytesFile  Hidechannel4unitSpeedDisk  Hidechannel4unitSpeedNet  Hidechannel4unitValueLookup  groupshowhideelement\" for=\"channel4customunit_\">Sensor Channel #4 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel4unitCustom  Hidechannel4unitBytesBandwidth  Hidechannel4unitBytesMemory  Hidechannel4unitBytesDisk  Hidechannel4unitTemperature  Hidechannel4unitPercent  Hidechannel4unitTimeResponse  Hidechannel4unitTimeSeconds  Hidechannel4unitTimeHours  Hidechannel4unitCount  InitialDisplayNone  Hidechannel4unitCPU  Hidechannel4unitBytesFile  Hidechannel4unitSpeedDisk  Hidechannel4unitSpeedNet  Hidechannel4unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel4customunit_\" id=\"channel4customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel4unitValueLookup  Hidechannel4unitBytesBandwidth  Hidechannel4unitBytesMemory  Hidechannel4unitBytesDisk  Hidechannel4unitTemperature  Hidechannel4unitPercent  Hidechannel4unitTimeResponse  Hidechannel4unitTimeSeconds  Hidechannel4unitTimeHours  Hidechannel4unitCount  InitialDisplayNone  Hidechannel4unitCPU  Hidechannel4unitBytesFile  Hidechannel4unitSpeedDisk  Hidechannel4unitSpeedNet  Hidechannel4unitCustom  groupshowhideelement\" for=\"channel4valuelookup_\">Sensor Channel #4 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel4unitValueLookup  Hidechannel4unitBytesBandwidth  Hidechannel4unitBytesMemory  Hidechannel4unitBytesDisk  Hidechannel4unitTemperature  Hidechannel4unitPercent  Hidechannel4unitTimeResponse  Hidechannel4unitTimeSeconds  Hidechannel4unitTimeHours  Hidechannel4unitCount  InitialDisplayNone  Hidechannel4unitCPU  Hidechannel4unitBytesFile  Hidechannel4unitSpeedDisk  Hidechannel4unitSpeedNet  Hidechannel4unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel4valuelookup_\" id=\"channel4valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel5_\">Sensor Channel #5</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel5_\" value=\"0\" checked  id=\"usechannel50\" >\n");
            builder.Append("<label for=\"usechannel50\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel5_\" value=\"1\" id=\"usechannel51\" >\n");
            builder.Append("<label for=\"usechannel51\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel5on\" class=\" Showusechannel51  Hideusechannel50  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel5name_\">Sensor Channel #5 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel5name_\" id=\"channel5name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel5columnnumber_\">Sensor Channel #5 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel5columnnumber_\" id=\"channel5columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel5columnname_\">Sensor Channel #5 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel5columnname_\" id=\"channel5columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel5rownumber_\">Sensor Channel #5 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel5rownumber_\" id=\"channel5rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel5key_\">Sensor Channel #5 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel5key_\" id=\"channel5key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel5isdifferential_\">Sensor Channel #5 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel5isdifferential_\" value=\"0\" checked  id=\"channel5isdifferential0\" >\n");
            builder.Append("<label for=\"channel5isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel5isdifferential_\" value=\"1\" id=\"channel5isdifferential1\" >\n");
            builder.Append("<label for=\"channel5isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel5unit_\">Sensor Channel #5 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel5unit_\" class=\"combo GroupShowHide\" id=\"channel5unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel5unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel5unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel5unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel5unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel5unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel5unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel5unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel5unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel5unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel5unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel5unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel5unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel5unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel5unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel5unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel5unitCustom  Hidechannel5unitBytesBandwidth  Hidechannel5unitBytesMemory  Hidechannel5unitBytesDisk  Hidechannel5unitTemperature  Hidechannel5unitPercent  Hidechannel5unitTimeResponse  Hidechannel5unitTimeSeconds  Hidechannel5unitTimeHours  Hidechannel5unitCount  InitialDisplayNone  Hidechannel5unitCPU  Hidechannel5unitBytesFile  Hidechannel5unitSpeedDisk  Hidechannel5unitSpeedNet  Hidechannel5unitValueLookup  groupshowhideelement\" for=\"channel5customunit_\">Sensor Channel #5 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel5unitCustom  Hidechannel5unitBytesBandwidth  Hidechannel5unitBytesMemory  Hidechannel5unitBytesDisk  Hidechannel5unitTemperature  Hidechannel5unitPercent  Hidechannel5unitTimeResponse  Hidechannel5unitTimeSeconds  Hidechannel5unitTimeHours  Hidechannel5unitCount  InitialDisplayNone  Hidechannel5unitCPU  Hidechannel5unitBytesFile  Hidechannel5unitSpeedDisk  Hidechannel5unitSpeedNet  Hidechannel5unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel5customunit_\" id=\"channel5customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel5unitValueLookup  Hidechannel5unitBytesBandwidth  Hidechannel5unitBytesMemory  Hidechannel5unitBytesDisk  Hidechannel5unitTemperature  Hidechannel5unitPercent  Hidechannel5unitTimeResponse  Hidechannel5unitTimeSeconds  Hidechannel5unitTimeHours  Hidechannel5unitCount  InitialDisplayNone  Hidechannel5unitCPU  Hidechannel5unitBytesFile  Hidechannel5unitSpeedDisk  Hidechannel5unitSpeedNet  Hidechannel5unitCustom  groupshowhideelement\" for=\"channel5valuelookup_\">Sensor Channel #5 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel5unitValueLookup  Hidechannel5unitBytesBandwidth  Hidechannel5unitBytesMemory  Hidechannel5unitBytesDisk  Hidechannel5unitTemperature  Hidechannel5unitPercent  Hidechannel5unitTimeResponse  Hidechannel5unitTimeSeconds  Hidechannel5unitTimeHours  Hidechannel5unitCount  InitialDisplayNone  Hidechannel5unitCPU  Hidechannel5unitBytesFile  Hidechannel5unitSpeedDisk  Hidechannel5unitSpeedNet  Hidechannel5unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel5valuelookup_\" id=\"channel5valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel6_\">Sensor Channel #6</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel6_\" value=\"0\" checked  id=\"usechannel60\" >\n");
            builder.Append("<label for=\"usechannel60\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel6_\" value=\"1\" id=\"usechannel61\" >\n");
            builder.Append("<label for=\"usechannel61\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel6on\" class=\" Showusechannel61  Hideusechannel60  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel6name_\">Sensor Channel #6 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel6name_\" id=\"channel6name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel6columnnumber_\">Sensor Channel #6 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel6columnnumber_\" id=\"channel6columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel6columnname_\">Sensor Channel #6 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel6columnname_\" id=\"channel6columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel6rownumber_\">Sensor Channel #6 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel6rownumber_\" id=\"channel6rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel6key_\">Sensor Channel #6 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel6key_\" id=\"channel6key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel6isdifferential_\">Sensor Channel #6 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel6isdifferential_\" value=\"0\" checked  id=\"channel6isdifferential0\" >\n");
            builder.Append("<label for=\"channel6isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel6isdifferential_\" value=\"1\" id=\"channel6isdifferential1\" >\n");
            builder.Append("<label for=\"channel6isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel6unit_\">Sensor Channel #6 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel6unit_\" class=\"combo GroupShowHide\" id=\"channel6unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel6unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel6unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel6unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel6unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel6unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel6unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel6unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel6unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel6unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel6unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel6unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel6unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel6unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel6unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel6unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel6unitCustom  Hidechannel6unitBytesBandwidth  Hidechannel6unitBytesMemory  Hidechannel6unitBytesDisk  Hidechannel6unitTemperature  Hidechannel6unitPercent  Hidechannel6unitTimeResponse  Hidechannel6unitTimeSeconds  Hidechannel6unitTimeHours  Hidechannel6unitCount  InitialDisplayNone  Hidechannel6unitCPU  Hidechannel6unitBytesFile  Hidechannel6unitSpeedDisk  Hidechannel6unitSpeedNet  Hidechannel6unitValueLookup  groupshowhideelement\" for=\"channel6customunit_\">Sensor Channel #6 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel6unitCustom  Hidechannel6unitBytesBandwidth  Hidechannel6unitBytesMemory  Hidechannel6unitBytesDisk  Hidechannel6unitTemperature  Hidechannel6unitPercent  Hidechannel6unitTimeResponse  Hidechannel6unitTimeSeconds  Hidechannel6unitTimeHours  Hidechannel6unitCount  InitialDisplayNone  Hidechannel6unitCPU  Hidechannel6unitBytesFile  Hidechannel6unitSpeedDisk  Hidechannel6unitSpeedNet  Hidechannel6unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel6customunit_\" id=\"channel6customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel6unitValueLookup  Hidechannel6unitBytesBandwidth  Hidechannel6unitBytesMemory  Hidechannel6unitBytesDisk  Hidechannel6unitTemperature  Hidechannel6unitPercent  Hidechannel6unitTimeResponse  Hidechannel6unitTimeSeconds  Hidechannel6unitTimeHours  Hidechannel6unitCount  InitialDisplayNone  Hidechannel6unitCPU  Hidechannel6unitBytesFile  Hidechannel6unitSpeedDisk  Hidechannel6unitSpeedNet  Hidechannel6unitCustom  groupshowhideelement\" for=\"channel6valuelookup_\">Sensor Channel #6 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel6unitValueLookup  Hidechannel6unitBytesBandwidth  Hidechannel6unitBytesMemory  Hidechannel6unitBytesDisk  Hidechannel6unitTemperature  Hidechannel6unitPercent  Hidechannel6unitTimeResponse  Hidechannel6unitTimeSeconds  Hidechannel6unitTimeHours  Hidechannel6unitCount  InitialDisplayNone  Hidechannel6unitCPU  Hidechannel6unitBytesFile  Hidechannel6unitSpeedDisk  Hidechannel6unitSpeedNet  Hidechannel6unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel6valuelookup_\" id=\"channel6valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel7_\">Sensor Channel #7</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel7_\" value=\"0\" checked  id=\"usechannel70\" >\n");
            builder.Append("<label for=\"usechannel70\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel7_\" value=\"1\" id=\"usechannel71\" >\n");
            builder.Append("<label for=\"usechannel71\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel7on\" class=\" Showusechannel71  Hideusechannel70  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel7name_\">Sensor Channel #7 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel7name_\" id=\"channel7name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel7columnnumber_\">Sensor Channel #7 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel7columnnumber_\" id=\"channel7columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel7columnname_\">Sensor Channel #7 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel7columnname_\" id=\"channel7columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel7rownumber_\">Sensor Channel #7 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel7rownumber_\" id=\"channel7rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel7key_\">Sensor Channel #7 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel7key_\" id=\"channel7key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel7isdifferential_\">Sensor Channel #7 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel7isdifferential_\" value=\"0\" checked  id=\"channel7isdifferential0\" >\n");
            builder.Append("<label for=\"channel7isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel7isdifferential_\" value=\"1\" id=\"channel7isdifferential1\" >\n");
            builder.Append("<label for=\"channel7isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel7unit_\">Sensor Channel #7 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel7unit_\" class=\"combo GroupShowHide\" id=\"channel7unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel7unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel7unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel7unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel7unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel7unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel7unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel7unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel7unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel7unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel7unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel7unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel7unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel7unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel7unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel7unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel7unitCustom  Hidechannel7unitBytesBandwidth  Hidechannel7unitBytesMemory  Hidechannel7unitBytesDisk  Hidechannel7unitTemperature  Hidechannel7unitPercent  Hidechannel7unitTimeResponse  Hidechannel7unitTimeSeconds  Hidechannel7unitTimeHours  Hidechannel7unitCount  InitialDisplayNone  Hidechannel7unitCPU  Hidechannel7unitBytesFile  Hidechannel7unitSpeedDisk  Hidechannel7unitSpeedNet  Hidechannel7unitValueLookup  groupshowhideelement\" for=\"channel7customunit_\">Sensor Channel #7 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel7unitCustom  Hidechannel7unitBytesBandwidth  Hidechannel7unitBytesMemory  Hidechannel7unitBytesDisk  Hidechannel7unitTemperature  Hidechannel7unitPercent  Hidechannel7unitTimeResponse  Hidechannel7unitTimeSeconds  Hidechannel7unitTimeHours  Hidechannel7unitCount  InitialDisplayNone  Hidechannel7unitCPU  Hidechannel7unitBytesFile  Hidechannel7unitSpeedDisk  Hidechannel7unitSpeedNet  Hidechannel7unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel7customunit_\" id=\"channel7customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel7unitValueLookup  Hidechannel7unitBytesBandwidth  Hidechannel7unitBytesMemory  Hidechannel7unitBytesDisk  Hidechannel7unitTemperature  Hidechannel7unitPercent  Hidechannel7unitTimeResponse  Hidechannel7unitTimeSeconds  Hidechannel7unitTimeHours  Hidechannel7unitCount  InitialDisplayNone  Hidechannel7unitCPU  Hidechannel7unitBytesFile  Hidechannel7unitSpeedDisk  Hidechannel7unitSpeedNet  Hidechannel7unitCustom  groupshowhideelement\" for=\"channel7valuelookup_\">Sensor Channel #7 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel7unitValueLookup  Hidechannel7unitBytesBandwidth  Hidechannel7unitBytesMemory  Hidechannel7unitBytesDisk  Hidechannel7unitTemperature  Hidechannel7unitPercent  Hidechannel7unitTimeResponse  Hidechannel7unitTimeSeconds  Hidechannel7unitTimeHours  Hidechannel7unitCount  InitialDisplayNone  Hidechannel7unitCPU  Hidechannel7unitBytesFile  Hidechannel7unitSpeedDisk  Hidechannel7unitSpeedNet  Hidechannel7unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel7valuelookup_\" id=\"channel7valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel8_\">Sensor Channel #8</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel8_\" value=\"0\" checked  id=\"usechannel80\" >\n");
            builder.Append("<label for=\"usechannel80\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel8_\" value=\"1\" id=\"usechannel81\" >\n");
            builder.Append("<label for=\"usechannel81\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel8on\" class=\" Showusechannel81  Hideusechannel80  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel8name_\">Sensor Channel #8 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel8name_\" id=\"channel8name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel8columnnumber_\">Sensor Channel #8 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel8columnnumber_\" id=\"channel8columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel8columnname_\">Sensor Channel #8 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel8columnname_\" id=\"channel8columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel8rownumber_\">Sensor Channel #8 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel8rownumber_\" id=\"channel8rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel8key_\">Sensor Channel #8 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel8key_\" id=\"channel8key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel8isdifferential_\">Sensor Channel #8 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel8isdifferential_\" value=\"0\" checked  id=\"channel8isdifferential0\" >\n");
            builder.Append("<label for=\"channel8isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel8isdifferential_\" value=\"1\" id=\"channel8isdifferential1\" >\n");
            builder.Append("<label for=\"channel8isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel8unit_\">Sensor Channel #8 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel8unit_\" class=\"combo GroupShowHide\" id=\"channel8unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel8unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel8unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel8unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel8unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel8unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel8unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel8unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel8unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel8unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel8unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel8unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel8unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel8unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel8unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel8unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel8unitCustom  Hidechannel8unitBytesBandwidth  Hidechannel8unitBytesMemory  Hidechannel8unitBytesDisk  Hidechannel8unitTemperature  Hidechannel8unitPercent  Hidechannel8unitTimeResponse  Hidechannel8unitTimeSeconds  Hidechannel8unitTimeHours  Hidechannel8unitCount  InitialDisplayNone  Hidechannel8unitCPU  Hidechannel8unitBytesFile  Hidechannel8unitSpeedDisk  Hidechannel8unitSpeedNet  Hidechannel8unitValueLookup  groupshowhideelement\" for=\"channel8customunit_\">Sensor Channel #8 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel8unitCustom  Hidechannel8unitBytesBandwidth  Hidechannel8unitBytesMemory  Hidechannel8unitBytesDisk  Hidechannel8unitTemperature  Hidechannel8unitPercent  Hidechannel8unitTimeResponse  Hidechannel8unitTimeSeconds  Hidechannel8unitTimeHours  Hidechannel8unitCount  InitialDisplayNone  Hidechannel8unitCPU  Hidechannel8unitBytesFile  Hidechannel8unitSpeedDisk  Hidechannel8unitSpeedNet  Hidechannel8unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel8customunit_\" id=\"channel8customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel8unitValueLookup  Hidechannel8unitBytesBandwidth  Hidechannel8unitBytesMemory  Hidechannel8unitBytesDisk  Hidechannel8unitTemperature  Hidechannel8unitPercent  Hidechannel8unitTimeResponse  Hidechannel8unitTimeSeconds  Hidechannel8unitTimeHours  Hidechannel8unitCount  InitialDisplayNone  Hidechannel8unitCPU  Hidechannel8unitBytesFile  Hidechannel8unitSpeedDisk  Hidechannel8unitSpeedNet  Hidechannel8unitCustom  groupshowhideelement\" for=\"channel8valuelookup_\">Sensor Channel #8 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel8unitValueLookup  Hidechannel8unitBytesBandwidth  Hidechannel8unitBytesMemory  Hidechannel8unitBytesDisk  Hidechannel8unitTemperature  Hidechannel8unitPercent  Hidechannel8unitTimeResponse  Hidechannel8unitTimeSeconds  Hidechannel8unitTimeHours  Hidechannel8unitCount  InitialDisplayNone  Hidechannel8unitCPU  Hidechannel8unitBytesFile  Hidechannel8unitSpeedDisk  Hidechannel8unitSpeedNet  Hidechannel8unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel8valuelookup_\" id=\"channel8valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel9_\">Sensor Channel #9</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel9_\" value=\"0\" checked  id=\"usechannel90\" >\n");
            builder.Append("<label for=\"usechannel90\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel9_\" value=\"1\" id=\"usechannel91\" >\n");
            builder.Append("<label for=\"usechannel91\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel9on\" class=\" Showusechannel91  Hideusechannel90  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel9name_\">Sensor Channel #9 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel9name_\" id=\"channel9name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel9columnnumber_\">Sensor Channel #9 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel9columnnumber_\" id=\"channel9columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel9columnname_\">Sensor Channel #9 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel9columnname_\" id=\"channel9columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel9rownumber_\">Sensor Channel #9 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel9rownumber_\" id=\"channel9rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel9key_\">Sensor Channel #9 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel9key_\" id=\"channel9key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel9isdifferential_\">Sensor Channel #9 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel9isdifferential_\" value=\"0\" checked  id=\"channel9isdifferential0\" >\n");
            builder.Append("<label for=\"channel9isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel9isdifferential_\" value=\"1\" id=\"channel9isdifferential1\" >\n");
            builder.Append("<label for=\"channel9isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel9unit_\">Sensor Channel #9 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel9unit_\" class=\"combo GroupShowHide\" id=\"channel9unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel9unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel9unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel9unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel9unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel9unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel9unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel9unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel9unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel9unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel9unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel9unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel9unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel9unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel9unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel9unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel9unitCustom  Hidechannel9unitBytesBandwidth  Hidechannel9unitBytesMemory  Hidechannel9unitBytesDisk  Hidechannel9unitTemperature  Hidechannel9unitPercent  Hidechannel9unitTimeResponse  Hidechannel9unitTimeSeconds  Hidechannel9unitTimeHours  Hidechannel9unitCount  InitialDisplayNone  Hidechannel9unitCPU  Hidechannel9unitBytesFile  Hidechannel9unitSpeedDisk  Hidechannel9unitSpeedNet  Hidechannel9unitValueLookup  groupshowhideelement\" for=\"channel9customunit_\">Sensor Channel #9 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel9unitCustom  Hidechannel9unitBytesBandwidth  Hidechannel9unitBytesMemory  Hidechannel9unitBytesDisk  Hidechannel9unitTemperature  Hidechannel9unitPercent  Hidechannel9unitTimeResponse  Hidechannel9unitTimeSeconds  Hidechannel9unitTimeHours  Hidechannel9unitCount  InitialDisplayNone  Hidechannel9unitCPU  Hidechannel9unitBytesFile  Hidechannel9unitSpeedDisk  Hidechannel9unitSpeedNet  Hidechannel9unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel9customunit_\" id=\"channel9customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel9unitValueLookup  Hidechannel9unitBytesBandwidth  Hidechannel9unitBytesMemory  Hidechannel9unitBytesDisk  Hidechannel9unitTemperature  Hidechannel9unitPercent  Hidechannel9unitTimeResponse  Hidechannel9unitTimeSeconds  Hidechannel9unitTimeHours  Hidechannel9unitCount  InitialDisplayNone  Hidechannel9unitCPU  Hidechannel9unitBytesFile  Hidechannel9unitSpeedDisk  Hidechannel9unitSpeedNet  Hidechannel9unitCustom  groupshowhideelement\" for=\"channel9valuelookup_\">Sensor Channel #9 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel9unitValueLookup  Hidechannel9unitBytesBandwidth  Hidechannel9unitBytesMemory  Hidechannel9unitBytesDisk  Hidechannel9unitTemperature  Hidechannel9unitPercent  Hidechannel9unitTimeResponse  Hidechannel9unitTimeSeconds  Hidechannel9unitTimeHours  Hidechannel9unitCount  InitialDisplayNone  Hidechannel9unitCPU  Hidechannel9unitBytesFile  Hidechannel9unitSpeedDisk  Hidechannel9unitSpeedNet  Hidechannel9unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel9valuelookup_\" id=\"channel9valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usechannel10_\">Sensor Channel #10</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can enable an additional channel here. This is only possible during sensor creation.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel10_\" value=\"0\" checked  id=\"usechannel100\" >\n");
            builder.Append("<label for=\"usechannel100\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usechannel10_\" value=\"1\" id=\"usechannel101\" >\n");
            builder.Append("<label for=\"usechannel101\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"usechannel10on\" class=\" Showusechannel101  Hideusechannel100  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel10name_\">Sensor Channel #10 Name</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter a name for the channel. Channel names need to be unique. The data channels are generated dynamically with the name used as identifier, so you cannot change it later.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel10name_\" id=\"channel10name_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel10columnnumber_\">Sensor Channel #10 Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel10columnnumber_\" id=\"channel10columnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"channel10columnname_\">Sensor Channel #10 Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel10columnname_\" id=\"channel10columnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"channel10rownumber_\">Sensor Channel #10 Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"channel10rownumber_\" id=\"channel10rownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"channel10key_\">Sensor Channel #10 Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"channel10key_\" id=\"channel10key_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel10isdifferential_\">Sensor Channel #10 Mode</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Define if you want to display the value as returned by the target device, or if you want to use the difference between the last and the current value.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel10isdifferential_\" value=\"0\" checked  id=\"channel10isdifferential0\" >\n");
            builder.Append("<label for=\"channel10isdifferential0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Absolute (recommended)\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"channel10isdifferential_\" value=\"1\" id=\"channel10isdifferential1\" >\n");
            builder.Append("<label for=\"channel10isdifferential1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Difference\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"channel10unit_\">Sensor Channel #10 Unit</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose a unit for this channel. For further information about the available units, see the custom sensors section of the PRTG API documentation.           <br/><br/><b>Note:</b> If you want to use lookups with this channel, please choose the unit <b>Value Lookup</b> and select the lookup file below.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel10unit_\" class=\"combo GroupShowHide\" id=\"channel10unit_\" >\n");
            builder.Append("<option  value=\"BytesBandwidth\" id=\"channel10unitBytesBandwidth\">BytesBandwidth</option>\n");
            builder.Append("<option  value=\"BytesMemory\" id=\"channel10unitBytesMemory\">BytesMemory</option>\n");
            builder.Append("<option  value=\"BytesDisk\" id=\"channel10unitBytesDisk\">BytesDisk</option>\n");
            builder.Append("<option  value=\"Temperature\" id=\"channel10unitTemperature\">Temperature</option>\n");
            builder.Append("<option  value=\"Percent\" id=\"channel10unitPercent\">Percent</option>\n");
            builder.Append("<option  value=\"TimeResponse\" id=\"channel10unitTimeResponse\">TimeResponse</option>\n");
            builder.Append("<option  value=\"TimeSeconds\" id=\"channel10unitTimeSeconds\">TimeSeconds</option>\n");
            builder.Append("<option  value=\"TimeHours\" id=\"channel10unitTimeHours\">TimeHours</option>\n");
            builder.Append("<option  value=\"Count\" selected=\"selected\"  id=\"channel10unitCount\">Count</option>\n");
            builder.Append("<option  value=\"CPU\" id=\"channel10unitCPU\">CPU</option>\n");
            builder.Append("<option  value=\"BytesFile\" id=\"channel10unitBytesFile\">BytesFile</option>\n");
            builder.Append("<option  value=\"SpeedDisk\" id=\"channel10unitSpeedDisk\">SpeedDisk</option>\n");
            builder.Append("<option  value=\"SpeedNet\" id=\"channel10unitSpeedNet\">SpeedNet</option>\n");
            builder.Append("<option  value=\"Custom\" id=\"channel10unitCustom\">Custom</option>\n");
            builder.Append("<option  value=\"ValueLookup\" id=\"channel10unitValueLookup\">Value Lookup</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel10unitCustom  Hidechannel10unitBytesBandwidth  Hidechannel10unitBytesMemory  Hidechannel10unitBytesDisk  Hidechannel10unitTemperature  Hidechannel10unitPercent  Hidechannel10unitTimeResponse  Hidechannel10unitTimeSeconds  Hidechannel10unitTimeHours  Hidechannel10unitCount  InitialDisplayNone  Hidechannel10unitCPU  Hidechannel10unitBytesFile  Hidechannel10unitSpeedDisk  Hidechannel10unitSpeedNet  Hidechannel10unitValueLookup  groupshowhideelement\" for=\"channel10customunit_\">Sensor Channel #10 Custom Unit</label>\n");
            builder.Append("<div class=\"controls  Showchannel10unitCustom  Hidechannel10unitBytesBandwidth  Hidechannel10unitBytesMemory  Hidechannel10unitBytesDisk  Hidechannel10unitTemperature  Hidechannel10unitPercent  Hidechannel10unitTimeResponse  Hidechannel10unitTimeSeconds  Hidechannel10unitTimeHours  Hidechannel10unitCount  InitialDisplayNone  Hidechannel10unitCPU  Hidechannel10unitBytesFile  Hidechannel10unitSpeedDisk  Hidechannel10unitSpeedNet  Hidechannel10unitValueLookup  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name for the custom unit. You can change it later in the channel settings.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  type=\"text\" name=\"channel10customunit_\" id=\"channel10customunit_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  Showchannel10unitValueLookup  Hidechannel10unitBytesBandwidth  Hidechannel10unitBytesMemory  Hidechannel10unitBytesDisk  Hidechannel10unitTemperature  Hidechannel10unitPercent  Hidechannel10unitTimeResponse  Hidechannel10unitTimeSeconds  Hidechannel10unitTimeHours  Hidechannel10unitCount  InitialDisplayNone  Hidechannel10unitCPU  Hidechannel10unitBytesFile  Hidechannel10unitSpeedDisk  Hidechannel10unitSpeedNet  Hidechannel10unitCustom  groupshowhideelement\" for=\"channel10valuelookup_\">Sensor Channel #10 Value Lookup</label>\n");
            builder.Append("<div class=\"controls  Showchannel10unitValueLookup  Hidechannel10unitBytesBandwidth  Hidechannel10unitBytesMemory  Hidechannel10unitBytesDisk  Hidechannel10unitTemperature  Hidechannel10unitPercent  Hidechannel10unitTimeResponse  Hidechannel10unitTimeSeconds  Hidechannel10unitTimeHours  Hidechannel10unitCount  InitialDisplayNone  Hidechannel10unitCPU  Hidechannel10unitBytesFile  Hidechannel10unitSpeedDisk  Hidechannel10unitSpeedNet  Hidechannel10unitCustom  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Select the lookup file that you want to use with this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"channel10valuelookup_\" id=\"channel10valuelookup_\" >\n");
            builder.Append("<option value=\"|None\" selected=\"selected\" >None</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.jamstatus|oid.paessler.hplaserjet.jamstatus\">oid.paessler.hplaserjet.jamstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.paperstatus|oid.paessler.hplaserjet.paperstatus\">oid.paessler.hplaserjet.paperstatus</option>\n");
            builder.Append("<option value=\"oid.paessler.hplaserjet.tonerstatus|oid.paessler.hplaserjet.tonerstatus\">oid.paessler.hplaserjet.tonerstatus</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.backupstate|prtg.customlookups.sqlserver.backupstate\">prtg.customlookups.sqlserver.backupstate</option>\n");
            builder.Append("<option value=\"prtg.customlookups.sqlserver.databasehealth|prtg.customlookups.sqlserver.databasehealth\">prtg.customlookups.sqlserver.databasehealth</option>\n");
            builder.Append("<option value=\"prtg.customlookups.veeam.backupstate|prtg.customlookups.veeam.backupstate\">prtg.customlookups.veeam.backupstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.access.status|prtg.standardlookups.access.status\">prtg.standardlookups.access.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateactiveok|prtg.standardlookups.activeinactive.stateactiveok\">prtg.standardlookups.activeinactive.stateactiveok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.activeinactive.stateless|prtg.standardlookups.activeinactive.stateless\">prtg.standardlookups.activeinactive.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus|prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus\">prtg.standardlookups.apc-mib.upsbattery.upsbatteryteststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.statevalue|prtg.standardlookups.aws.statevalue\">prtg.standardlookups.aws.statevalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.aws.status|prtg.standardlookups.aws.status\">prtg.standardlookups.aws.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasarraystatus|prtg.standardlookups.buffalo.ts.nasarraystatus\">prtg.standardlookups.buffalo.ts.nasarraystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdisksmartstatus|prtg.standardlookups.buffalo.ts.nasdisksmartstatus\">prtg.standardlookups.buffalo.ts.nasdisksmartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasdiskstatus|prtg.standardlookups.buffalo.ts.nasdiskstatus\">prtg.standardlookups.buffalo.ts.nasdiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasfailoverstatus|prtg.standardlookups.buffalo.ts.nasfailoverstatus\">prtg.standardlookups.buffalo.ts.nasfailoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasiscsistatus|prtg.standardlookups.buffalo.ts.nasiscsistatus\">prtg.standardlookups.buffalo.ts.nasiscsistatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasisfwupdateavailable|prtg.standardlookups.buffalo.ts.nasisfwupdateavailable\">prtg.standardlookups.buffalo.ts.nasisfwupdateavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.buffalo.ts.nasrpsustatus|prtg.standardlookups.buffalo.ts.nasrpsustatus\">prtg.standardlookups.buffalo.ts.nasrpsustatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.businessprocess.state|prtg.standardlookups.businessprocess.state\">prtg.standardlookups.businessprocess.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.ciscoenvmonstate|prtg.standardlookups.cisco.ciscoenvmonstate\">prtg.standardlookups.cisco.ciscoenvmonstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassisconfigstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate|prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate\">prtg.standardlookups.cisco.cucs.cucsequipmentchassispoweroperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.cucslicensestate|prtg.standardlookups.cisco.cucs.cucslicensestate\">prtg.standardlookups.cisco.cucs.cucslicensestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentoperability|prtg.standardlookups.cisco.cucs.equipmentoperability\">prtg.standardlookups.cisco.cucs.equipmentoperability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpowerstate|prtg.standardlookups.cisco.cucs.equipmentpowerstate\">prtg.standardlookups.cisco.cucs.equipmentpowerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentpresence|prtg.standardlookups.cisco.cucs.equipmentpresence\">prtg.standardlookups.cisco.cucs.equipmentpresence</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus|prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus\">prtg.standardlookups.cisco.cucs.equipmentsensorthresholdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.cucs.lsoperstate|prtg.standardlookups.cisco.cucs.lsoperstate\">prtg.standardlookups.cisco.cucs.lsoperstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.sensecode|prtg.standardlookups.cisco.sensecode\">prtg.standardlookups.cisco.sensecode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.cisco.truthvalue|prtg.standardlookups.cisco.truthvalue\">prtg.standardlookups.cisco.truthvalue</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.commonsaas.services|prtg.standardlookups.commonsaas.services\">prtg.standardlookups.commonsaas.services</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.bothok|prtg.standardlookups.connectionstate.bothok\">prtg.standardlookups.connectionstate.bothok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.connectionstate.stateonlineok|prtg.standardlookups.connectionstate.stateonlineok\">prtg.standardlookups.connectionstate.stateonlineok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.dellstatus|prtg.standardlookups.dell.dellstatus\">prtg.standardlookups.dell.dellstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate|prtg.standardlookups.dell.diskstate\">prtg.standardlookups.dell.diskstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.diskstate_idrac|prtg.standardlookups.dell.diskstate_idrac\">prtg.standardlookups.dell.diskstate_idrac</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.availability|prtg.standardlookups.dell.equallogic.availability\">prtg.standardlookups.dell.equallogic.availability</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskhealth|prtg.standardlookups.dell.equallogic.diskhealth\">prtg.standardlookups.dell.equallogic.diskhealth</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.diskstatus|prtg.standardlookups.dell.equallogic.diskstatus\">prtg.standardlookups.dell.equallogic.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberhealthstatus|prtg.standardlookups.dell.equallogic.memberhealthstatus\">prtg.standardlookups.dell.equallogic.memberhealthstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.memberstatus|prtg.standardlookups.dell.equallogic.memberstatus\">prtg.standardlookups.dell.equallogic.memberstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.operstatus|prtg.standardlookups.dell.equallogic.operstatus\">prtg.standardlookups.dell.equallogic.operstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.powersupplystatus|prtg.standardlookups.dell.equallogic.powersupplystatus\">prtg.standardlookups.dell.equallogic.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.equallogic.raidstatus|prtg.standardlookups.dell.equallogic.raidstatus\">prtg.standardlookups.dell.equallogic.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.mode|prtg.standardlookups.dell.phydisk.mode\">prtg.standardlookups.dell.phydisk.mode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.dell.phydisk.status|prtg.standardlookups.dell.phydisk.status\">prtg.standardlookups.dell.phydisk.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateenabledok|prtg.standardlookups.disabledenabled.stateenabledok\">prtg.standardlookups.disabledenabled.stateenabledok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.disabledenabled.stateless|prtg.standardlookups.disabledenabled.stateless\">prtg.standardlookups.disabledenabled.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.docker.containerstatus|prtg.standardlookups.docker.containerstatus\">prtg.standardlookups.docker.containerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.health|prtg.standardlookups.emc.health\">prtg.standardlookups.emc.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.diskstatus|prtg.standardlookups.emc.lenovo.diskstatus\">prtg.standardlookups.emc.lenovo.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.emc.lenovo.raidstatus|prtg.standardlookups.emc.lenovo.raidstatus\">prtg.standardlookups.emc.lenovo.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exampledevice|prtg.standardlookups.exampledevice\">prtg.standardlookups.exampledevice</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.activationstatus|prtg.standardlookups.exchangedag.activationstatus\">prtg.standardlookups.exchangedag.activationstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.contentindexstate|prtg.standardlookups.exchangedag.contentindexstate\">prtg.standardlookups.exchangedag.contentindexstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.status|prtg.standardlookups.exchangedag.status\">prtg.standardlookups.exchangedag.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.allstatesok|prtg.standardlookups.exchangedag.yesno.allstatesok\">prtg.standardlookups.exchangedag.yesno.allstatesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.statenook|prtg.standardlookups.exchangedag.yesno.statenook\">prtg.standardlookups.exchangedag.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyesok|prtg.standardlookups.exchangedag.yesno.stateyesok\">prtg.standardlookups.exchangedag.yesno.stateyesok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.exchangedag.yesno.stateyeswarning|prtg.standardlookups.exchangedag.yesno.stateyeswarning\">prtg.standardlookups.exchangedag.yesno.stateyeswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.gitlab.buildstatus|prtg.standardlookups.gitlab.buildstatus\">prtg.standardlookups.gitlab.buildstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.google.gsa.health|prtg.standardlookups.google.gsa.health\">prtg.standardlookups.google.gsa.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.enclosure.condition|prtg.standardlookups.hp.blade.enclosure.condition\">prtg.standardlookups.hp.blade.enclosure.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.power|prtg.standardlookups.hp.blade.power\">prtg.standardlookups.hp.blade.power</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.blade.status|prtg.standardlookups.hp.blade.status\">prtg.standardlookups.hp.blade.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.condition|prtg.standardlookups.hp.condition\">prtg.standardlookups.hp.condition</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.diskstatus|prtg.standardlookups.hp.diskstatus\">prtg.standardlookups.hp.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.eva.state|prtg.standardlookups.hp.eva.state\">prtg.standardlookups.hp.eva.state</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.logicaldiskstatus|prtg.standardlookups.hp.logicaldiskstatus\">prtg.standardlookups.hp.logicaldiskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorycontrollererrorstatus|prtg.standardlookups.hp.memorycontrollererrorstatus\">prtg.standardlookups.hp.memorycontrollererrorstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.memorymodulestatus|prtg.standardlookups.hp.memorymodulestatus\">prtg.standardlookups.hp.memorymodulestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.powersupplystatus|prtg.standardlookups.hp.powersupplystatus\">prtg.standardlookups.hp.powersupplystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.smartstatus|prtg.standardlookups.hp.smartstatus\">prtg.standardlookups.hp.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.status|prtg.standardlookups.hp.status\">prtg.standardlookups.hp.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hp.statuswarning|prtg.standardlookups.hp.statuswarning\">prtg.standardlookups.hp.statuswarning</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscode|prtg.standardlookups.http.statuscode\">prtg.standardlookups.http.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.http.statuscodedetailed|prtg.standardlookups.http.statuscodedetailed\">prtg.standardlookups.http.statuscodedetailed</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.clusternodestatus|prtg.standardlookups.hyperv.clusternodestatus\">prtg.standardlookups.hyperv.clusternodestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.communicationstate|prtg.standardlookups.hyperv.communicationstate\">prtg.standardlookups.hyperv.communicationstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.computerstate|prtg.standardlookups.hyperv.computerstate\">prtg.standardlookups.hyperv.computerstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.hoststatus|prtg.standardlookups.hyperv.hoststatus\">prtg.standardlookups.hyperv.hoststatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.virtualserverstate|prtg.standardlookups.hyperv.virtualserverstate\">prtg.standardlookups.hyperv.virtualserverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.hyperv.vmstatus|prtg.standardlookups.hyperv.vmstatus\">prtg.standardlookups.hyperv.vmstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.operationalstatus|prtg.standardlookups.ibm.operationalstatus\">prtg.standardlookups.ibm.operationalstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.overallstatus|prtg.standardlookups.ibm.overallstatus\">prtg.standardlookups.ibm.overallstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ibm.psstatus|prtg.standardlookups.ibm.psstatus\">prtg.standardlookups.ibm.psstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ipmi.powersupply|prtg.standardlookups.ipmi.powersupply\">prtg.standardlookups.ipmi.powersupply</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.fanstatus|prtg.standardlookups.juniper.fanstatus\">prtg.standardlookups.juniper.fanstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.juniper.powerstatus|prtg.standardlookups.juniper.powerstatus\">prtg.standardlookups.juniper.powerstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.lanmanager.servicestate|prtg.standardlookups.lanmanager.servicestate\">prtg.standardlookups.lanmanager.servicestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus|prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus\">prtg.standardlookups.liebert.lgppwrbattery.lgppwrbatterychargestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgppwrbatterycapacitystatus|prtg.standardlookups.liebert.lgppwrbatterycapacitystatus\">prtg.standardlookups.liebert.lgppwrbatterycapacitystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult|prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult\">prtg.standardlookups.liebert.lgpsysstatus.lgpsysselftestresult</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.microsoft.applicationpoolstate|prtg.standardlookups.microsoft.applicationpoolstate\">prtg.standardlookups.microsoft.applicationpoolstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.aggrstate|prtg.standardlookups.netapp.aggrstate\">prtg.standardlookups.netapp.aggrstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.batterystate|prtg.standardlookups.netapp.batterystate\">prtg.standardlookups.netapp.batterystate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.dfstatus|prtg.standardlookups.netapp.dfstatus\">prtg.standardlookups.netapp.dfstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.fsstatus|prtg.standardlookups.netapp.fsstatus\">prtg.standardlookups.netapp.fsstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.healthstate|prtg.standardlookups.netapp.healthstate\">prtg.standardlookups.netapp.healthstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunalignment|prtg.standardlookups.netapp.lunalignment\">prtg.standardlookups.netapp.lunalignment</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.lunstate|prtg.standardlookups.netapp.lunstate\">prtg.standardlookups.netapp.lunstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.notavailable|prtg.standardlookups.netapp.notavailable\">prtg.standardlookups.netapp.notavailable</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.sparestate|prtg.standardlookups.netapp.sparestate\">prtg.standardlookups.netapp.sparestate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.takeoverstatus|prtg.standardlookups.netapp.takeoverstatus\">prtg.standardlookups.netapp.takeoverstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.netapp.tempstate|prtg.standardlookups.netapp.tempstate\">prtg.standardlookups.netapp.tempstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateless|prtg.standardlookups.offon.stateless\">prtg.standardlookups.offon.stateless</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.offon.stateonok|prtg.standardlookups.offon.stateonok\">prtg.standardlookups.offon.stateonok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.onlinestatus|prtg.standardlookups.oracle.tablespace.onlinestatus\">prtg.standardlookups.oracle.tablespace.onlinestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.oracle.tablespace.status|prtg.standardlookups.oracle.tablespace.status\">prtg.standardlookups.oracle.tablespace.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.hdstatus|prtg.standardlookups.qnap.hdstatus\">prtg.standardlookups.qnap.hdstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.smartstatus|prtg.standardlookups.qnap.smartstatus\">prtg.standardlookups.qnap.smartstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.qnap.volstatus|prtg.standardlookups.qnap.volstatus\">prtg.standardlookups.qnap.volstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.radius.status|prtg.standardlookups.radius.status\">prtg.standardlookups.radius.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.rfc.hardwarestatus|prtg.standardlookups.rfc.hardwarestatus\">prtg.standardlookups.rfc.hardwarestatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sip.statuscode|prtg.standardlookups.sip.statuscode\">prtg.standardlookups.sip.statuscode</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.cartridgelevel|prtg.standardlookups.snmpprinter.cartridgelevel\">prtg.standardlookups.snmpprinter.cartridgelevel</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.snmpprinter.coverstate|prtg.standardlookups.snmpprinter.coverstate\">prtg.standardlookups.snmpprinter.coverstate</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.health|prtg.standardlookups.sshsan.health\">prtg.standardlookups.sshsan.health</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sshsan.status|prtg.standardlookups.sshsan.status\">prtg.standardlookups.sshsan.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.cncheck|prtg.standardlookups.sslcertificatesensor.cncheck\">prtg.standardlookups.sslcertificatesensor.cncheck</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickey|prtg.standardlookups.sslcertificatesensor.publickey\">prtg.standardlookups.sslcertificatesensor.publickey</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.publickeyecc|prtg.standardlookups.sslcertificatesensor.publickeyecc\">prtg.standardlookups.sslcertificatesensor.publickeyecc</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.revoked|prtg.standardlookups.sslcertificatesensor.revoked\">prtg.standardlookups.sslcertificatesensor.revoked</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.selfsigned|prtg.standardlookups.sslcertificatesensor.selfsigned\">prtg.standardlookups.sslcertificatesensor.selfsigned</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslcertificatesensor.trustedroot|prtg.standardlookups.sslcertificatesensor.trustedroot\">prtg.standardlookups.sslcertificatesensor.trustedroot</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptokdeniednone|prtg.standardlookups.sslsensor.acceptokdeniednone\">prtg.standardlookups.sslsensor.acceptokdeniednone</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.acceptwarndeniedok|prtg.standardlookups.sslsensor.acceptwarndeniedok\">prtg.standardlookups.sslsensor.acceptwarndeniedok</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security|prtg.standardlookups.sslsensor.security\">prtg.standardlookups.sslsensor.security</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.security.compatibility|prtg.standardlookups.sslsensor.security.compatibility\">prtg.standardlookups.sslsensor.security.compatibility</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.ssl|prtg.standardlookups.sslsensor.ssl\">prtg.standardlookups.sslsensor.ssl</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.sslsensor.tls|prtg.standardlookups.sslsensor.tls\">prtg.standardlookups.sslsensor.tls</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.diskstatus|prtg.standardlookups.synology.diskstatus\">prtg.standardlookups.synology.diskstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.raidstatus|prtg.standardlookups.synology.raidstatus\">prtg.standardlookups.synology.raidstatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.synology.status|prtg.standardlookups.synology.status\">prtg.standardlookups.synology.status</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus|prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus\">prtg.standardlookups.ups-mib.upsbattery.upsbatterystatus</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upsoutput.upsoutputsource|prtg.standardlookups.ups-mib.upsoutput.upsoutputsource\">prtg.standardlookups.ups-mib.upsoutput.upsoutputsource</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.ups-mib.upstest.upstestresultssummary|prtg.standardlookups.ups-mib.upstest.upstestresultssummary\">prtg.standardlookups.ups-mib.upstest.upstestresultssummary</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.wmi.antivir|prtg.standardlookups.wmi.antivir\">prtg.standardlookups.wmi.antivir</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenook|prtg.standardlookups.yesno.statenook\">prtg.standardlookups.yesno.statenook</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.statenookna|prtg.standardlookups.yesno.statenookna\">prtg.standardlookups.yesno.statenookna</option>\n");
            builder.Append("<option value=\"prtg.standardlookups.yesno.stateyesok|prtg.standardlookups.yesno.stateyesok\">prtg.standardlookups.yesno.stateyesok</option></select></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"usecustommessage_\">Use Data Table Value in Sensor Message</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Choose whether you want to define a custom sensor message.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usecustommessage_\" value=\"0\" checked  id=\"usecustommessage0\" >\n");
            builder.Append("<label for=\"usecustommessage0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Disable\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio  GroupShowHide\" name=\"usecustommessage_\" value=\"1\" id=\"usecustommessage1\" >\n");
            builder.Append("<label for=\"usecustommessage1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Enable\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<span id=\"custommessageon\" class=\" Showusecustommessage1  Hideusecustommessage0  InitialDisplayNone  groupshowhideelement\">\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"msgcolumnnumber_\">Sensor Message Column Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnID  HideselectbyColumnName  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the column from which the value in row 0 will be displayed in this channel. The first column has index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"msgcolumnnumber_\" id=\"msgcolumnnumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" for=\"msgcolumnname_\">Sensor Message Column Name</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyColumnName  HideselectbyColumnID  InitialDisplayNone  HideselectbyRowNumber  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the name of the column from which the value in row 0 will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"msgcolumnname_\" id=\"msgcolumnname_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" for=\"msgrownumber_\">Sensor Message Row Number</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  HideselectbyKeyValue  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the number of the row from which the value in column 0 will be displayed in this channel. The first row has got index 0.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-number=\"true\" data-rule-min=\"0\" data-rule-required=\"true\" type=\"text\" name=\"msgrownumber_\" id=\"msgrownumber_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" for=\"msgkey_\">Sensor Message Key</label>\n");
            builder.Append("<div class=\"controls  ShowselectbyKeyValue  HideselectbyRowNumber  HideselectbyColumnID  InitialDisplayNone  HideselectbyColumnName  groupshowhideelement\" data-placement=\"right\" data-helptext=\"Enter the key to search for in column 0 of the data table. The value in column 1 of the same row where the key was found will be displayed in this channel.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"msgkey_\" id=\"msgkey_\" autocomplete=\"off\" value=\"\" ></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"msgtemplate_\">Sensor Message</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Enter {0} where the value is supposed to be inserted.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<input class=\"text\"  data-rule-required=\"true\" type=\"text\" name=\"msgtemplate_\" id=\"msgtemplate_\" autocomplete=\"off\" value=\"The Message is {0}\" ></div>\n");
            builder.Append("</span>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"monitorchange_\">If Sensor Message Changes</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"You can optionally monitor the sensor message. If it changes a 'change' notification will be triggered. You can use 'change' triggers in the sensor's <b>Notifications</b> tab.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#datagroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<div class=\"radio-control\">\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"monitorchange_\" value=\"0\" checked  id=\"monitorchange0\" >\n");
            builder.Append("<label for=\"monitorchange0\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Ignore changes\n");
            builder.Append("</label>\n");
            builder.Append("<input type=\"radio\" class=\"hidden radio \" name=\"monitorchange_\" value=\"1\" id=\"monitorchange1\" >\n");
            builder.Append("<label for=\"monitorchange1\" class=\"radio-control-label\">\n");
            builder.Append("<i class=\"icon-gray icon-radio-on\"></i>\n");
            builder.Append("Trigger &#39;change&#39; notification\n");
            builder.Append("</label>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("</span>\n");
            builder.Append("<span class=\" InitialDisplayNone \"><div class=\"wiz1-3\"><input type=\"hidden\" name=\"writeresult\" value=\"0\"></div></span>\n");
            builder.Append("</div></fieldset><fieldset class=\"collapsed\">\n");
            builder.Append("<legend class=\"prtg-header\">Scanning Interval\n");
            builder.Append("<span class=\"inheritedfrom\">\n");
            builder.Append("<input name=\"intervalgroup\" type=\"hidden\" value=\"0\"><input class=\"toggleFieldset GroupShowHide checkbox\" name=\"intervalgroup\" type=\"checkbox\" value=\"1\" id=\"Inheritintervalgroup\"  checked=\"checked\" ><label for=\"Inheritintervalgroup\">inherit from</label> <a  dependency=\"2114\" deptype=\"select\"  thisid=\"2113\" class=\"devicemenu isnotpaused  isfavorite localprobe\" style=\"background-image:url(/icons/devices/C_OS_VMware.png)\" id=\"2113\" href=\"device.htm?id=2113\">sql-1<span class=\"ui-icon ui-icon-flag\" title=\"Favorite\"></span></a> \n");
            builder.Append(" <span title=\"Scanning Interval: 1 hour, Set sensor to warning for 1 interval, then set to &quot;down&quot; (recommended)\">(Scanning Interval: 1 hour, Set sensor to warn...)</span></span>\n");
            builder.Append("</legend><div class=\"control-group\">\n");
            builder.Append("<label class=\"control-label has_help \" for=\"interval_\">Scanning Interval</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"Select the period of time between two scans.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#intervalgroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"interval_\" id=\"interval_\" >\n");
            builder.Append("<option value=\"1|1 second (Not officially supported)\">1 second (Not officially supported)</option>\n");
            builder.Append("<option value=\"9|9 seconds (Not officially supported)\">9 seconds (Not officially supported)</option>\n");
            builder.Append("<option value=\"10|10 seconds\">10 seconds</option>\n");
            builder.Append("<option value=\"30|30 seconds\">30 seconds</option>\n");
            builder.Append("<option value=\"60|60 seconds\" selected=\"selected\" >60 seconds</option>\n");
            builder.Append("<option value=\"300|5 minutes\">5 minutes</option>\n");
            builder.Append("<option value=\"600|10 minutes\">10 minutes</option>\n");
            builder.Append("<option value=\"900|15 minutes\">15 minutes</option>\n");
            builder.Append("<option value=\"1800|30 minutes\">30 minutes</option>\n");
            builder.Append("<option value=\"3600|1 hour\">1 hour</option>\n");
            builder.Append("<option value=\"14400|4 hours\">4 hours</option>\n");
            builder.Append("<option value=\"21600|6 hours\">6 hours</option>\n");
            builder.Append("<option value=\"43200|12 hours\">12 hours</option>\n");
            builder.Append("<option value=\"86400|24 hours\">24 hours</option></select></div>\n");
            builder.Append("<label class=\"control-label has_help \" for=\"errorintervalsdown_\">If a Sensor Query Fails</label>\n");
            builder.Append("<div class=\"controls \" data-placement=\"right\" data-helptext=\"If a sensor query fails, for example, because the monitored device is unreachable, PRTG can try to reach and check the device again within the next scanning interval before the sensor is shown as 'down'. This can avoid false alarms if your device has temporary issues only.<br/><br/><b>Note:</b> WMI sensors always use at least 1 interval. Channel error limits and channels using lookups will always set the sensor to 'down' immediately.<p><a class='morehelp nohjax' target='_blank' href='/help/microsoft_sql_v2_sensor.htm#intervalgroup'>Further Help (Manual)</a></p>\">\n");
            builder.Append("<select name=\"errorintervalsdown_\" class=\"combo\" id=\"errorintervalsdown_\" >\n");
            builder.Append("<option  value=\"0\" id=\"errorintervalsdown0\">Set sensor to &quot;down&quot; immediately</option>\n");
            builder.Append("<option  value=\"1\" selected=\"selected\"  id=\"errorintervalsdown1\">Set sensor to warning for 1 interval, then set to &quot;down&quot; (recommended)</option>\n");
            builder.Append("<option  value=\"2\" id=\"errorintervalsdown2\">Set sensor to warning for 2 intervals, then set to &quot;down&quot;</option>\n");
            builder.Append("<option  value=\"3\" id=\"errorintervalsdown3\">Set sensor to warning for 3 intervals, then set to &quot;down&quot;</option>\n");
            builder.Append("<option  value=\"4\" id=\"errorintervalsdown4\">Set sensor to warning for 4 intervals, then set to &quot;down&quot;</option>\n");
            builder.Append("<option  value=\"5\" id=\"errorintervalsdown5\">Set sensor to warning for 5 intervals, then set to &quot;down&quot;</option></select></div>\n");
            builder.Append("<span class=\" InitialDisplayNone \"><div class=\"wiz1-3\"><input type=\"hidden\" name=\"inherittriggers\" value=\"1\"></div></span>\n");
            builder.Append("</div></fieldset><input type=\"hidden\" name=\"id\" value=\"2113\"> <input type=\"hidden\" name=\"sensortype\" value=\"mssqlv2\">\n");
            builder.Append("      <div class=\"submitbuttonboxanchor\">\n");
            builder.Append("        <div class=\"submitbuttonbox\">\n");
            builder.Append("          <input style=\"\" class=\"submit btngrey button\" type=\"submit\" value=\"Continue &gt;\">\n");
            builder.Append("          <input onClick=\"history.back();return(false)\" class=\"cancel btngrey button\" type=\"reset\" value=\"Cancel\">\n");
            builder.Append("        </div>\n");
            builder.Append("      </div>\n");
            builder.Append("    </form>\n");
            builder.Append("  </div>\n");
            builder.Append("  <div class=\"contexthelpbox prtg-plugin\" data-id=\"id1169398716\" data-plugin=\"contexthelp\" data-plugin-function=\"add\" data-plugin-target=\"#header_help\" data-show=\"true\"><div class=\"helpheader\">Specifying sensor settings</div><p>Please specify the settings for the new sensor. <a href='/help/microsoft_sql_v2_sensor.htm#settings' target='_blank'><b>Help: Sensor Settings</b></a></p></div>\n");
            builder.Append("</div>\n");
            builder.Append("</div>\n");
            builder.Append("<footer class=\"hidebuttons\">\n");
            builder.Append("    <div id='alarmsound'></div>\n");
            builder.Append("  <div id=\"prtg_growls\"></div>\n");
            builder.Append("  <div id='helpcontainer' class=\"hidden prtg-plugin\" data-plugin=\"contexthelp\">\n");
            builder.Append("    <div class=\"helptitle\">\n");
            builder.Append("      <img src=\"/images/questionmark.png\" style=\"margin-top:-2px\">\n");
            builder.Append("      Help <i id=\"closehelp\" class=\"flr icon-dark ui-button-icon-primary ui-icon ui-icon-closethick\"></i>\n");
            builder.Append("    </div>\n");
            builder.Append("    <div class=\"lasthelpitem contexthelpbox\">\n");
            builder.Append("      <div class=\"helpmorehelp\">\n");
            builder.Append("        <a href='/help.htm'>Get more help in the Help Center!</a>\n");
            builder.Append("      </div>\n");
            builder.Append("    </div>\n");
            builder.Append("  </div>\n");
            builder.Append("  <div id=\"sendfeedbackbox\">\n");
            builder.Append("    <span id=\"feedbackbuttons\" style=\"float:right;\">\n");
            builder.Append("      <a id=\"updatevailablebox\" onclick=\"window.top.location.href = '/autoupdate.htm';return false;\" style=\"\">\n");
            builder.Append("        <span class=\"hideonhover\"> <i class=\"icon-gear icon-dark\"></i>\n");
            builder.Append("          Update Available</span>\n");
            builder.Append("        <span class=\"showonhover\">\n");
            builder.Append("          Install the latest update</span>\n");
            builder.Append("      </a>\n");
            builder.Append("      <a id=\"followprtg\" class=\"nohjax hidefollowbutton\" style=\"  \" href=\"followprtg.htm\">\n");
            builder.Append("        <span class=\"hideonhover\">\n");
            builder.Append("          <i class=\"icon-signal-diag icon-dark\"></i>\n");
            builder.Append("          Follow & Share</span>\n");
            builder.Append("        <span class=\"showonhover\">\n");
            builder.Append("          Tell others about PRTG!</span>\n");
            builder.Append("      </a>\n");
            builder.Append("      <a id=\"sendfeedback\" class=\"hidefeedbackbutton\" style=\" display:none; \" onclick=\"_Prtg.objectTools.sendFeedback('/sendfeedback.htm?errorurl='+window.location.pathname,'');return false;\">\n");
            builder.Append("        <span class=\"hideonhover\">\n");
            builder.Append("          <i class=\"icon-mail-closed icon-dark\"></i>\n");
            builder.Append("          Contact Support</span>\n");
            builder.Append("        <span class=\"showonhover\">\n");
            builder.Append("          Contact Paessler Support</span>\n");
            builder.Append("      </a>\n");
            builder.Append("      <a id=\"togglehelp\">\n");
            builder.Append("        <div class=\"hideonhover\">\n");
            builder.Append("          <i class=\"icon-help icon-dark\"></i>\n");
            builder.Append("          Help</div>\n");
            builder.Append("        <div class=\"showonhover\">\n");
            builder.Append("          Show context help</div>\n");
            builder.Append("        <span class=\"helpactive\" style=\"display: inline-block;\"></span>\n");
            builder.Append("      </a>\n");
            builder.Append("    </span>\n");
            builder.Append("  </div>\n");
            builder.Append("  <div class=\"footer\">\n");
            builder.Append("    <span style=\"width:105px\">\n");
            builder.Append("      <a href=\"https://www.paessler.com\" target=\"_blank\">\n");
            builder.Append("        <div id=\"paesslerlogo\" title=\"Paessler AG - The Network Monitoring Company\"></div>\n");
            builder.Append("      </a>\n");
            builder.Append("    </span>\n");
            builder.Append("    <span style=\"width:25%\">\n");
            builder.Append("      <a href=\"https://www.paessler.com/prtg\" target=\"_blank\" data-placement=\"top\" title=\"PRTG Network Monitoring Software\">PRTG Network Monitor</a>\n");
            builder.Append("      17.4.33.3283  \n");
            builder.Append("    </span>\n");
            builder.Append("    <span>\n");
            builder.Append("      &copy; 2017 <a href=\"https://www.paessler.com\" target=\"_blank\" data-placement=\"top\" title=\"The Network Monitoring Company\">Paessler AG</a>\n");
            builder.Append("    </span>\n");
            builder.Append("    <span>\n");
            builder.Append("      PRTG System Administrator\n");
            builder.Append("    </span>\n");
            builder.Append("    <span id='footerrefresh' class=\"prtg-plugin\" data-plugin=\"prtg-toggle-autorefresh\">\n");
            builder.Append("      <span class=\"refreshclock\"><a class=\"toggle-autorefresh\" href=\"#\"><i class=\"icon-pause icon-dark\"></i></a></span>\n");
            builder.Append("      <span class=\"refreshclock\">Refresh in</span>\n");
            builder.Append("      <span class=\"refreshclock\" id=\"footerrefreshclock\">30</span>\n");
            builder.Append("      <span class=\"refreshclock\">sec</span>\n");
            builder.Append("      <span class=\"refreshinglable\">Refreshing...</span>\n");
            builder.Append("    </span>\n");
            builder.Append("    <span class=\"serverclock\" style=\"width:125px;float:right;\">4/02/2018 11:33:36 PM</span>\n");
            builder.Append("  </div>\n");
            builder.Append("</footer>\n");
            builder.Append("<noscript>\n");
            builder.Append("  <div class=\"ui-widget-overlay ui-front\"></div>\n");
            builder.Append("  <div id=\"nojavascripterror\">\n");
            builder.Append("    <b>Sorry, the AJAX Web Interface of PRTG can not work properly without Javascript.</b><br><br><i>Javascript seems to be disabled or this browser does not support Javascript.</i><br><br>Please enable Javascript\n");
            builder.Append("  </div>\n");
            builder.Append("</noscript>\n");
            builder.Append("</body>\n");
            builder.Append("</html>\n");

            return builder.ToString();
        }
    }
}
